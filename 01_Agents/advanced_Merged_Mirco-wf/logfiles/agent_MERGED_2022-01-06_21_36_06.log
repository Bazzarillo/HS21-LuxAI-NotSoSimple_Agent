0 Found mantainer unaccounted for u_2
0 Worker Positions {'u_2': deque([(8, 10)], maxlen=3)}
0 Found mantainer unaccounted for u_1
0 Found worker w/o resource u_2
0 Worker Positions {'u_1': deque([(3, 10)], maxlen=3)}
0 Found worker w/o resource u_1
0: ### Found a hight density position:[0, 3] ###

0 Defining Max Density area
0: ### Found a hight density position:[0, 3] ###

0 Defining Max Density area
0: Doing research! 

0: Doing research! 

1 Worker Positions {'u_2': deque([(8, 10), (8, 9)], maxlen=3)}
1 Worker Positions {'u_1': deque([(3, 10), (3, 9)], maxlen=3)}
2 Worker Positions {'u_2': deque([(8, 10), (8, 9), (8, 9)], maxlen=3)}
2 Worker Positions {'u_1': deque([(3, 10), (3, 9), (3, 9)], maxlen=3)}
3 Worker Positions {'u_1': deque([(3, 9), (3, 9), (3, 9)], maxlen=3)}
3 Worker Positions {'u_2': deque([(8, 9), (8, 9), (8, 9)], maxlen=3)}
3: Looks like a stuck worker u_1 - deque([(3, 9), (3, 9), (3, 9)], maxlen=3)

3: Looks like a stuck worker u_2 - deque([(8, 9), (8, 9), (8, 9)], maxlen=3)

4 Worker Positions {'u_1': deque([(3, 9), (3, 9), (4, 9)], maxlen=3)}
4 Worker Positions {'u_2': deque([(8, 9), (8, 9), (8, 10)], maxlen=3)}
5 Worker Positions {'u_1': deque([(3, 9), (4, 9), (4, 9)], maxlen=3)}
5 Worker Positions {'u_2': deque([(8, 9), (8, 10), (8, 9)], maxlen=3)}
5: Stuff needed for building a City (c_1) fuel: 0.0, size: 1, enough fuel: False

6 Worker Positions {'u_2': deque([(8, 10), (8, 9), (8, 9)], maxlen=3)}
6 Worker Positions {'u_1': deque([(4, 9), (4, 9), (4, 10)], maxlen=3)}
7 Worker Positions {'u_2': deque([(8, 9), (8, 9), (8, 9)], maxlen=3)}
7: Looks like a stuck worker u_2 - deque([(8, 9), (8, 9), (8, 9)], maxlen=3)

7 Worker Positions {'u_1': deque([(4, 9), (4, 10), (4, 10)], maxlen=3)}
7: Stuff needed for building a City (c_1) fuel: 0.0, size: 1, enough fuel: False

8 Worker Positions {'u_1': deque([(4, 10), (4, 10), (3, 10)], maxlen=3)}
8 Worker Positions {'u_2': deque([(8, 9), (8, 9), (8, 10)], maxlen=3)}
9 Worker Positions {'u_2': deque([(8, 9), (8, 10), (8, 9)], maxlen=3)}
9 Worker Positions {'u_1': deque([(4, 10), (3, 10), (3, 9)], maxlen=3)}
10 Worker Positions {'u_2': deque([(8, 10), (8, 9), (8, 9)], maxlen=3)}
10 Worker Positions {'u_1': deque([(3, 10), (3, 9), (3, 9)], maxlen=3)}
10: Doing research! 

10: Doing research! 

11 Worker Positions {'u_2': deque([(8, 9), (8, 9), (8, 9)], maxlen=3)}
11 Worker Positions {'u_1': deque([(3, 9), (3, 9), (3, 9)], maxlen=3)}
11: Looks like a stuck worker u_2 - deque([(8, 9), (8, 9), (8, 9)], maxlen=3)

11: Looks like a stuck worker u_1 - deque([(3, 9), (3, 9), (3, 9)], maxlen=3)

12 Worker Positions {'u_2': deque([(8, 9), (8, 9), (9, 9)], maxlen=3)}
12 Worker Positions {'u_1': deque([(3, 9), (3, 9), (3, 10)], maxlen=3)}
13 Worker Positions {'u_2': deque([(8, 9), (9, 9), (9, 9)], maxlen=3)}
13: Stuff needed for building a City (c_2) fuel: 200.0, size: 1, enough fuel: False

13 Worker Positions {'u_1': deque([(3, 9), (3, 10), (3, 9)], maxlen=3)}
14 Worker Positions {'u_1': deque([(3, 10), (3, 9), (3, 9)], maxlen=3)}
14 Worker Positions {'u_2': deque([(9, 9), (9, 9), (9, 10)], maxlen=3)}
15 Worker Positions {'u_1': deque([(3, 9), (3, 9), (3, 9)], maxlen=3)}
15 Worker Positions {'u_2': deque([(9, 9), (9, 10), (9, 10)], maxlen=3)}
15: Looks like a stuck worker u_1 - deque([(3, 9), (3, 9), (3, 9)], maxlen=3)

15: Stuff needed for building a City (c_2) fuel: 200.0, size: 1, enough fuel: False

16 Worker Positions {'u_1': deque([(3, 9), (3, 9), (4, 9)], maxlen=3)}
16 Worker Positions {'u_2': deque([(9, 10), (9, 10), (8, 10)], maxlen=3)}
17 Worker Positions {'u_1': deque([(3, 9), (4, 9), (4, 9)], maxlen=3)}
17 Worker Positions {'u_2': deque([(9, 10), (8, 10), (8, 9)], maxlen=3)}
17: Stuff needed for building a City (c_1) fuel: 200.0, size: 1, enough fuel: False

18 Worker Positions {'u_1': deque([(4, 9), (4, 9), (4, 10)], maxlen=3)}
18 Worker Positions {'u_2': deque([(8, 10), (8, 9), (8, 9)], maxlen=3)}
19 Worker Positions {'u_2': deque([(8, 9), (8, 9), (8, 9)], maxlen=3)}
19 Worker Positions {'u_1': deque([(4, 9), (4, 10), (4, 10)], maxlen=3)}
19: Looks like a stuck worker u_2 - deque([(8, 9), (8, 9), (8, 9)], maxlen=3)

19: Stuff needed for building a City (c_1) fuel: 200.0, size: 1, enough fuel: False

20 Worker Positions {'u_2': deque([(8, 9), (8, 9), (7, 9)], maxlen=3)}
20: Doing research! 

20 Worker Positions {'u_1': deque([(4, 10), (4, 10), (3, 10)], maxlen=3)}
20: Doing research! 

21 Worker Positions {'u_2': deque([(8, 9), (7, 9), (7, 9)], maxlen=3)}
21 Worker Positions {'u_1': deque([(4, 10), (3, 10), (3, 9)], maxlen=3)}
21: Stuff needed for building a City (c_2) fuel: 300.0, size: 1, enough fuel: True

21: We WANT to build a city!

21: Found build location:(7, 10)

21: Building City around standard area <lux.game_objects.CityTile object at 0x7f922ba51c70> 

21: Navigating to where we wish to build!

21: dir_diff: (0, 1) xdiff: 0 ydiff: 1

21: ### Actions: ['m u_2 s']

22 Worker Positions {'u_2': deque([(7, 9), (7, 9), (7, 10)], maxlen=3)}
22 Worker Positions {'u_1': deque([(3, 10), (3, 9), (3, 9)], maxlen=3)}
23 Worker Positions {'u_2': deque([(7, 9), (7, 10), (7, 10)], maxlen=3)}
23: Stuff needed for building a City (c_2) fuel: 300.0, size: 1, enough fuel: True

23 Worker Positions {'u_1': deque([(3, 9), (3, 9), (3, 9)], maxlen=3)}
23: We WANT to build a city!

23: ### We BUILT the city! ###
        Number of City Tiles: 1

23: Looks like a stuck worker u_1 - deque([(3, 9), (3, 9), (3, 9)], maxlen=3)

24 Worker Positions {'u_2': deque([(7, 10), (7, 10), (7, 10)], maxlen=3)}
24: Looks like a stuck worker u_2 - deque([(7, 10), (7, 10), (7, 10)], maxlen=3)

24 Worker Positions {'u_1': deque([(3, 9), (3, 9), (2, 9)], maxlen=3)}
24: Created a worker! 

25 Worker Positions {'u_1': deque([(3, 9), (2, 9), (2, 9)], maxlen=3)}
25 Found mantainer unaccounted for u_3
25: Stuff needed for building a City (c_1) fuel: 300.0, size: 1, enough fuel: True

25: We WANT to build a city!

25 Worker Positions {'u_2': deque([(7, 10), (7, 10), (7, 9)], maxlen=3), 'u_3': deque([(7, 10)], maxlen=3)}
25 Found worker w/o resource u_3
25: Found build location:(4, 10)

25: Building City around standard area <lux.game_objects.CityTile object at 0x7f8cb7a4da90> 

25: Navigating to where we wish to build!

25: dir_diff: (2, 1) xdiff: 2 ydiff: 1

25: ### Actions: ['m u_1 e']

26 Worker Positions {'u_1': deque([(2, 9), (2, 9), (3, 9)], maxlen=3)}
26 Worker Positions {'u_2': deque([(7, 10), (7, 9), (7, 9)], maxlen=3), 'u_3': deque([(7, 10), (7, 10)], maxlen=3)}
26: Looks like a stuck worker u_3 - deque([(7, 10), (7, 10)], maxlen=3)

27 Worker Positions {'u_1': deque([(2, 9), (3, 9), (3, 9)], maxlen=3)}
27: Stuff needed for building a City (c_1) fuel: 300.0, size: 1, enough fuel: True

27: We WANT to build a city!

27 Worker Positions {'u_2': deque([(7, 9), (7, 9), (8, 9)], maxlen=3), 'u_3': deque([(7, 10), (7, 10), (6, 10)], maxlen=3)}
27: Navigating to where we wish to build!

27: dir_diff: (1, 1) xdiff: 1 ydiff: 1

27: ### Actions: ['m u_1 e']

28 Worker Positions {'u_1': deque([(3, 9), (3, 9), (4, 9)], maxlen=3)}
28 Worker Positions {'u_2': deque([(7, 9), (8, 9), (8, 9)], maxlen=3), 'u_3': deque([(7, 10), (6, 10), (6, 10)], maxlen=3)}
28: Stuff needed for building a City (c_2) fuel: 300.0, size: 2, enough fuel: False

29 Worker Positions {'u_1': deque([(3, 9), (4, 9), (4, 9)], maxlen=3)}
29: Stuff needed for building a City (c_1) fuel: 300.0, size: 1, enough fuel: True

29: We WANT to build a city!

29 Worker Positions {'u_2': deque([(8, 9), (8, 9), (8, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 9)], maxlen=3)}
29: Navigating to where we wish to build!

29: dir_diff: (0, 1) xdiff: 0 ydiff: 1

29: ### Actions: ['m u_1 s']

30 Worker Positions {'u_1': deque([(4, 9), (4, 9), (4, 10)], maxlen=3)}
30: Doing research! 

30 Worker Positions {'u_2': deque([(8, 9), (8, 10), (8, 9)], maxlen=3), 'u_3': deque([(6, 10), (6, 9), (6, 9)], maxlen=3)}
30: Doing research! 

31 Worker Positions {'u_2': deque([(8, 10), (8, 9), (8, 9)], maxlen=3), 'u_3': deque([(6, 9), (6, 9), (7, 9)], maxlen=3)}
31 Worker Positions {'u_1': deque([(4, 9), (4, 10), (4, 10)], maxlen=3)}
32 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 9)], maxlen=3)}
32 Worker Positions {'u_2': deque([(8, 9), (8, 9), (8, 9)], maxlen=3), 'u_3': deque([(6, 9), (7, 9), (7, 9)], maxlen=3)}
32: Looks like a stuck worker u_2 - deque([(8, 9), (8, 9), (8, 9)], maxlen=3)

33 Worker Positions {'u_1': deque([(4, 10), (4, 9), (4, 9)], maxlen=3)}
33 Worker Positions {'u_2': deque([(8, 9), (8, 9), (8, 8)], maxlen=3), 'u_3': deque([(7, 9), (7, 9), (7, 9)], maxlen=3)}
34 Worker Positions {'u_1': deque([(4, 9), (4, 9), (4, 9)], maxlen=3)}
34 Worker Positions {'u_2': deque([(8, 9), (8, 8), (8, 8)], maxlen=3), 'u_3': deque([(7, 9), (7, 9), (7, 9)], maxlen=3)}
34: Looks like a stuck worker u_3 - deque([(7, 9), (7, 9), (7, 9)], maxlen=3)

34: Doing research! 

35 Worker Positions {'u_1': deque([(4, 9), (4, 9), (4, 9)], maxlen=3)}
35 Worker Positions {'u_2': deque([(8, 8), (8, 8), (8, 8)], maxlen=3), 'u_3': deque([(7, 9), (7, 9), (8, 9)], maxlen=3)}
35: Looks like a stuck worker u_1 - deque([(4, 9), (4, 9), (4, 9)], maxlen=3)

36 Worker Positions {'u_1': deque([(4, 9), (4, 9), (5, 9)], maxlen=3)}
36 Worker Positions {'u_2': deque([(8, 8), (8, 8), (8, 8)], maxlen=3), 'u_3': deque([(7, 9), (8, 9), (8, 9)], maxlen=3)}
36: Looks like a stuck worker u_2 - deque([(8, 8), (8, 8), (8, 8)], maxlen=3)

37 Worker Positions {'u_1': deque([(4, 9), (5, 9), (5, 9)], maxlen=3)}
37 Worker Positions {'u_2': deque([(8, 8), (8, 8), (8, 8)], maxlen=3), 'u_3': deque([(8, 9), (8, 9), (8, 9)], maxlen=3)}
37: Looks like a stuck worker u_2 - deque([(8, 8), (8, 8), (8, 8)], maxlen=3)

38 Worker Positions {'u_1': deque([(5, 9), (5, 9), (5, 9)], maxlen=3)}
38 Worker Positions {'u_2': deque([(8, 8), (8, 8), (8, 7)], maxlen=3), 'u_3': deque([(8, 9), (8, 9), (8, 9)], maxlen=3)}
38: Looks like a stuck worker u_3 - deque([(8, 9), (8, 9), (8, 9)], maxlen=3)

39 Worker Positions {'u_2': deque([(8, 8), (8, 7), (8, 7)], maxlen=3), 'u_3': deque([(8, 9), (8, 9), (7, 9)], maxlen=3)}
39 Worker Positions {'u_1': deque([(5, 9), (5, 9), (5, 9)], maxlen=3)}
39: Looks like a stuck worker u_1 - deque([(5, 9), (5, 9), (5, 9)], maxlen=3)

40 Worker Positions {'u_1': deque([(5, 9), (5, 9), (4, 9)], maxlen=3)}
40 Worker Positions {'u_2': deque([(8, 7), (8, 7), (8, 7)], maxlen=3), 'u_3': deque([(8, 9), (7, 9), (7, 9)], maxlen=3)}
40: Doing research! 

40: Doing research! 

41 Worker Positions {'u_1': deque([(5, 9), (4, 9), (4, 9)], maxlen=3)}
41 Worker Positions {'u_2': deque([(8, 7), (8, 7), (8, 7)], maxlen=3), 'u_3': deque([(7, 9), (7, 9), (7, 9)], maxlen=3)}
41: Looks like a stuck worker u_2 - deque([(8, 7), (8, 7), (8, 7)], maxlen=3)

42 Worker Positions {'u_1': deque([(4, 9), (4, 9), (4, 9)], maxlen=3)}
42 Worker Positions {'u_2': deque([(8, 7), (8, 7), (8, 8)], maxlen=3), 'u_3': deque([(7, 9), (7, 9), (7, 9)], maxlen=3)}
42: Looks like a stuck worker u_3 - deque([(7, 9), (7, 9), (7, 9)], maxlen=3)

43 Worker Positions {'u_1': deque([(4, 9), (4, 9), (4, 9)], maxlen=3)}
43 Worker Positions {'u_2': deque([(8, 7), (8, 8), (8, 8)], maxlen=3), 'u_3': deque([(7, 9), (7, 9), (7, 8)], maxlen=3)}
43: Looks like a stuck worker u_1 - deque([(4, 9), (4, 9), (4, 9)], maxlen=3)

43: Stuff needed for building a City (c_2) fuel: 40.0, size: 2, enough fuel: False

44 Worker Positions {'u_1': deque([(4, 9), (4, 9), (4, 8)], maxlen=3)}
44 Worker Positions {'u_2': deque([(8, 8), (8, 8), (8, 9)], maxlen=3), 'u_3': deque([(7, 9), (7, 8), (7, 8)], maxlen=3)}
44: Stuff needed for building a City (c_2) fuel: 40.0, size: 2, enough fuel: False

44: Doing research! 

45 Worker Positions {'u_1': deque([(4, 9), (4, 8), (4, 8)], maxlen=3)}
45 Worker Positions {'u_2': deque([(8, 8), (8, 9), (8, 9)], maxlen=3), 'u_3': deque([(7, 8), (7, 8), (7, 9)], maxlen=3)}
45: Stuff needed for building a City (c_1) fuel: 70.0, size: 1, enough fuel: False

45: Stuff needed for building a City (c_2) fuel: 40.0, size: 2, enough fuel: False

46 Worker Positions {'u_1': deque([(4, 8), (4, 8), (4, 9)], maxlen=3)}
46 Worker Positions {'u_2': deque([(8, 9), (8, 9), (8, 10)], maxlen=3), 'u_3': deque([(7, 8), (7, 9), (7, 9)], maxlen=3)}
46: Stuff needed for building a City (c_2) fuel: 140.0, size: 2, enough fuel: False

47 Worker Positions {'u_1': deque([(4, 8), (4, 9), (4, 9)], maxlen=3)}
47 Worker Positions {'u_2': deque([(8, 9), (8, 10), (8, 9)], maxlen=3), 'u_3': deque([(7, 9), (7, 9), (7, 10)], maxlen=3)}
47: Stuff needed for building a City (c_1) fuel: 70.0, size: 1, enough fuel: False

48 Worker Positions {'u_1': deque([(4, 9), (4, 9), (4, 10)], maxlen=3)}
48 Worker Positions {'u_2': deque([(8, 10), (8, 9), (8, 9)], maxlen=3), 'u_3': deque([(7, 9), (7, 10), (7, 9)], maxlen=3)}
49 Worker Positions {'u_1': deque([(4, 9), (4, 10), (4, 10)], maxlen=3)}
49 Worker Positions {'u_2': deque([(8, 9), (8, 9), (8, 9)], maxlen=3), 'u_3': deque([(7, 10), (7, 9), (7, 9)], maxlen=3)}
49: Stuff needed for building a City (c_1) fuel: 70.0, size: 1, enough fuel: False

49: Looks like a stuck worker u_2 - deque([(8, 9), (8, 9), (8, 9)], maxlen=3)

50 Worker Positions {'u_1': deque([(4, 10), (4, 10), (3, 10)], maxlen=3)}
50 Worker Positions {'u_2': deque([(8, 9), (8, 9), (9, 9)], maxlen=3), 'u_3': deque([(7, 9), (7, 9), (8, 9)], maxlen=3)}
50: Doing research! 

50: Doing research! 

51 Worker Positions {'u_1': deque([(4, 10), (3, 10), (3, 9)], maxlen=3)}
51 Worker Positions {'u_2': deque([(8, 9), (9, 9), (9, 9)], maxlen=3), 'u_3': deque([(7, 9), (8, 9), (8, 9)], maxlen=3)}
51: Stuff needed for building a City (c_2) fuel: 240.0, size: 2, enough fuel: False

51: Stuff needed for building a City (c_2) fuel: 240.0, size: 2, enough fuel: False

51: We WANT to build a city!

51: Something likely went wrong, couldn't find any empty tile

51: Building City around standard area <lux.game_objects.CityTile object at 0x7f922ba5d790> 

51: Unit error 'NoneType' object has no attribute 'pos' 

52 Worker Positions {'u_2': deque([(9, 9), (9, 9), (9, 10)], maxlen=3), 'u_3': deque([(8, 9), (8, 9), (8, 9)], maxlen=3)}
52 Worker Positions {'u_1': deque([(3, 10), (3, 9), (3, 9)], maxlen=3)}
52: Looks like a stuck worker u_3 - deque([(8, 9), (8, 9), (8, 9)], maxlen=3)

53 Worker Positions {'u_1': deque([(3, 9), (3, 9), (3, 9)], maxlen=3)}
53 Worker Positions {'u_2': deque([(9, 9), (9, 10), (9, 10)], maxlen=3), 'u_3': deque([(8, 9), (8, 9), (7, 9)], maxlen=3)}
53: Looks like a stuck worker u_1 - deque([(3, 9), (3, 9), (3, 9)], maxlen=3)

53: Stuff needed for building a City (c_2) fuel: 240.0, size: 2, enough fuel: False

54 Worker Positions {'u_1': deque([(3, 9), (3, 9), (4, 9)], maxlen=3)}
54 Worker Positions {'u_2': deque([(9, 10), (9, 10), (8, 10)], maxlen=3), 'u_3': deque([(8, 9), (7, 9), (7, 9)], maxlen=3)}
54: Stuff needed for building a City (c_2) fuel: 340.0, size: 2, enough fuel: False

54: We WANT to build a city!

54: Found build location:(6, 10)

54: Building City around standard area <lux.game_objects.CityTile object at 0x7f922ba53fa0> 

54: Navigating to where we wish to build!

54: dir_diff: (-1, 1) xdiff: -1 ydiff: 1

54: ### Actions: ['m u_2 n', 'm u_3 w']

54: Doing research! 

55 Worker Positions {'u_1': deque([(3, 9), (4, 9), (4, 9)], maxlen=3)}
55 Worker Positions {'u_2': deque([(9, 10), (8, 10), (8, 9)], maxlen=3), 'u_3': deque([(7, 9), (7, 9), (6, 9)], maxlen=3)}
55: Stuff needed for building a City (c_1) fuel: 170.0, size: 1, enough fuel: False

56 Worker Positions {'u_1': deque([(4, 9), (4, 9), (4, 10)], maxlen=3)}
56 Worker Positions {'u_2': deque([(8, 10), (8, 9), (8, 9)], maxlen=3), 'u_3': deque([(7, 9), (6, 9), (6, 9)], maxlen=3)}
56: Stuff needed for building a City (c_2) fuel: 340.0, size: 2, enough fuel: False

57 Worker Positions {'u_1': deque([(4, 9), (4, 10), (4, 10)], maxlen=3)}
57 Worker Positions {'u_2': deque([(8, 9), (8, 9), (8, 9)], maxlen=3), 'u_3': deque([(6, 9), (6, 9), (7, 9)], maxlen=3)}
57: Stuff needed for building a City (c_1) fuel: 170.0, size: 1, enough fuel: False

57: Looks like a stuck worker u_2 - deque([(8, 9), (8, 9), (8, 9)], maxlen=3)

58 Worker Positions {'u_1': deque([(4, 10), (4, 10), (3, 10)], maxlen=3)}
58 Worker Positions {'u_2': deque([(8, 9), (8, 9), (8, 8)], maxlen=3), 'u_3': deque([(6, 9), (7, 9), (7, 9)], maxlen=3)}
58: Stuff needed for building a City (c_2) fuel: 340.0, size: 2, enough fuel: False

59 Worker Positions {'u_1': deque([(4, 10), (3, 10), (3, 9)], maxlen=3)}
59 Worker Positions {'u_2': deque([(8, 9), (8, 8), (8, 8)], maxlen=3), 'u_3': deque([(7, 9), (7, 9), (7, 10)], maxlen=3)}
59: Stuff needed for building a City (c_2) fuel: 440.0, size: 2, enough fuel: False

60 Worker Positions {'u_1': deque([(3, 10), (3, 9), (3, 9)], maxlen=3)}
60: Doing research! 

60 Worker Positions {'u_2': deque([(8, 8), (8, 8), (8, 9)], maxlen=3), 'u_3': deque([(7, 9), (7, 10), (7, 9)], maxlen=3)}
60: Doing research! 

61 Worker Positions {'u_1': deque([(3, 9), (3, 9), (3, 9)], maxlen=3)}
61 Worker Positions {'u_2': deque([(8, 8), (8, 9), (8, 9)], maxlen=3), 'u_3': deque([(7, 10), (7, 9), (7, 9)], maxlen=3)}
61: Looks like a stuck worker u_1 - deque([(3, 9), (3, 9), (3, 9)], maxlen=3)

61: Stuff needed for building a City (c_2) fuel: 440.0, size: 2, enough fuel: False

62 Worker Positions {'u_1': deque([(3, 9), (3, 9), (2, 9)], maxlen=3)}
62 Worker Positions {'u_2': deque([(8, 9), (8, 9), (8, 10)], maxlen=3), 'u_3': deque([(7, 9), (7, 9), (8, 9)], maxlen=3)}
63 Worker Positions {'u_1': deque([(3, 9), (2, 9), (2, 9)], maxlen=3)}
63 Worker Positions {'u_2': deque([(8, 9), (8, 10), (8, 10)], maxlen=3), 'u_3': deque([(7, 9), (8, 9), (8, 9)], maxlen=3)}
63: Stuff needed for building a City (c_1) fuel: 270.0, size: 1, enough fuel: True

63: We WANT to build a city!

63: Stuff needed for building a City (c_2) fuel: 580.0, size: 2, enough fuel: True

63: Navigating to where we wish to build!

63: We WANT to build a city!

63: dir_diff: (2, 1) xdiff: 2 ydiff: 1

63: Navigating to where we wish to build!

63: dir_diff: (-2, 1) xdiff: -2 ydiff: 1

63: ### Actions: ['m u_1 e']

63: ### Actions: ['m u_2 n', 'm u_3 w']

64 Worker Positions {'u_1': deque([(2, 9), (2, 9), (3, 9)], maxlen=3)}
64 Worker Positions {'u_2': deque([(8, 10), (8, 10), (8, 9)], maxlen=3), 'u_3': deque([(8, 9), (8, 9), (7, 9)], maxlen=3)}
64: Doing research! 

65 Worker Positions {'u_1': deque([(2, 9), (3, 9), (3, 9)], maxlen=3)}
65 Worker Positions {'u_2': deque([(8, 10), (8, 9), (8, 9)], maxlen=3), 'u_3': deque([(8, 9), (7, 9), (7, 9)], maxlen=3)}
65: Stuff needed for building a City (c_1) fuel: 270.0, size: 1, enough fuel: True

65: Stuff needed for building a City (c_2) fuel: 580.0, size: 2, enough fuel: True

65: We WANT to build a city!

65: Navigating to where we wish to build!

65: We WANT to build a city!

65: dir_diff: (1, 1) xdiff: 1 ydiff: 1

65: ### Actions: ['m u_1 e']

65: Navigating to where we wish to build!

65: dir_diff: (-1, 1) xdiff: -1 ydiff: 1

65: ### Actions: ['m u_2 c', 'm u_3 w']

66 Worker Positions {'u_2': deque([(8, 9), (8, 9), (8, 9)], maxlen=3), 'u_3': deque([(7, 9), (7, 9), (6, 9)], maxlen=3)}
66 Worker Positions {'u_1': deque([(3, 9), (3, 9), (4, 9)], maxlen=3)}
66: Looks like a stuck worker u_2 - deque([(8, 9), (8, 9), (8, 9)], maxlen=3)

67 Worker Positions {'u_1': deque([(3, 9), (4, 9), (4, 9)], maxlen=3)}
67 Worker Positions {'u_2': deque([(8, 9), (8, 9), (7, 9)], maxlen=3), 'u_3': deque([(7, 9), (6, 9), (6, 9)], maxlen=3)}
67: Stuff needed for building a City (c_1) fuel: 270.0, size: 1, enough fuel: True

67: We WANT to build a city!

67: Stuff needed for building a City (c_2) fuel: 580.0, size: 2, enough fuel: True

67: Navigating to where we wish to build!

67: We WANT to build a city!

67: Navigating to where we wish to build!

67: dir_diff: (0, 1) xdiff: 0 ydiff: 1

67: dir_diff: (0, 1) xdiff: 0 ydiff: 1

67: ### Actions: ['m u_1 s']

67: ### Actions: ['m u_3 s']

68 Worker Positions {'u_1': deque([(4, 9), (4, 9), (4, 10)], maxlen=3)}
68 Worker Positions {'u_2': deque([(8, 9), (7, 9), (7, 9)], maxlen=3), 'u_3': deque([(6, 9), (6, 9), (6, 10)], maxlen=3)}
68: Stuff needed for building a City (c_2) fuel: 580.0, size: 2, enough fuel: True

68: We WANT to build a city!

68: Found build location:(6, 10)

68: Building City around standard area <lux.game_objects.CityTile object at 0x7f922ba59040> 

68: Navigating to where we wish to build!

68: dir_diff: (-1, 1) xdiff: -1 ydiff: 1

68: ### Actions: ['m u_2 w']

69 Worker Positions {'u_1': deque([(4, 9), (4, 10), (4, 10)], maxlen=3)}
69 Worker Positions {'u_2': deque([(7, 9), (7, 9), (6, 9)], maxlen=3), 'u_3': deque([(6, 9), (6, 10), (6, 10)], maxlen=3)}
69: Stuff needed for building a City (c_2) fuel: 580.0, size: 2, enough fuel: True

69: Stuff needed for building a City (c_1) fuel: 270.0, size: 1, enough fuel: True

69: We WANT to build a city!

69: We WANT to build a city!

69: ### We BUILT the city! ###
        Number of City Tiles: 1

69: ### We BUILT the city! ###
        Number of City Tiles: 2

70 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3)}
70 Worker Positions {'u_2': deque([(7, 9), (6, 9), (6, 9)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3)}
70: Looks like a stuck worker u_1 - deque([(4, 10), (4, 10), (4, 10)], maxlen=3)

70 We want to drop of resources
70: Created a worker! 

70: Looks like a stuck worker u_3 - deque([(6, 10), (6, 10), (6, 10)], maxlen=3)

70: Created a worker! 

70: Doing research! 

70: Doing research! 

71 Found mantainer unaccounted for u_5
71 Found mantainer unaccounted for u_4
71 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10)], maxlen=3)}
71 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 10)], maxlen=3)}
71 Found the Max-Density Explorer u_5
71 Found the Max-Density Explorer u_4
72 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 10), (8, 9)], maxlen=3)}
72 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 9)], maxlen=3)}
73 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 9), (3, 9)], maxlen=3)}
73 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 10), (8, 9), (8, 9)], maxlen=3)}
74 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 9), (3, 9)], maxlen=3)}
74 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 9), (8, 9), (8, 9)], maxlen=3)}
74: Created a worker! 

75 Found mantainer unaccounted for u_6
75 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 9), (3, 9)], maxlen=3)}
75: Looks like a stuck worker u_4 - deque([(3, 9), (3, 9), (3, 9)], maxlen=3)

75 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 9), (8, 9), (8, 9)], maxlen=3), 'u_6': deque([(7, 10)], maxlen=3)}
75 Found the Max-Density Explorer u_6
75: Looks like a stuck worker u_5 - deque([(8, 9), (8, 9), (8, 9)], maxlen=3)

76 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 9), (4, 9)], maxlen=3)}
76 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 9), (8, 9), (8, 10)], maxlen=3), 'u_6': deque([(7, 10), (7, 9)], maxlen=3)}
77 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (4, 9), (4, 9)], maxlen=3)}
77 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 9), (8, 10), (8, 9)], maxlen=3), 'u_6': deque([(7, 10), (7, 9), (7, 9)], maxlen=3)}
78 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 9), (4, 9), (4, 9)], maxlen=3)}
78 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 10), (8, 9), (8, 9)], maxlen=3), 'u_6': deque([(7, 9), (7, 9), (7, 9)], maxlen=3)}
79 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 9), (4, 9), (4, 9)], maxlen=3)}
79 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 9), (8, 9), (8, 9)], maxlen=3), 'u_6': deque([(7, 9), (7, 9), (7, 9)], maxlen=3)}
79: Looks like a stuck worker u_6 - deque([(7, 9), (7, 9), (7, 9)], maxlen=3)

79: Looks like a stuck worker u_4 - deque([(4, 9), (4, 9), (4, 9)], maxlen=3)

80 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 9), (4, 9), (5, 9)], maxlen=3)}
80 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 9), (8, 9), (8, 9)], maxlen=3), 'u_6': deque([(7, 9), (7, 9), (7, 10)], maxlen=3)}
80: Looks like a stuck worker u_5 - deque([(8, 9), (8, 9), (8, 9)], maxlen=3)

80: Created a worker! 

80: Doing research! 

81 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 9), (5, 9), (5, 9)], maxlen=3)}
81 Found mantainer unaccounted for u_7
81 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 9), (8, 9), (8, 9)], maxlen=3), 'u_6': deque([(7, 9), (7, 10), (7, 10)], maxlen=3), 'u_7': deque([(8, 10)], maxlen=3)}
81 Found worker w/o resource u_7
81: Looks like a stuck worker u_5 - deque([(8, 9), (8, 9), (8, 9)], maxlen=3)

82 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 9), (5, 9), (5, 9)], maxlen=3)}
82 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 9), (8, 9), (8, 9)], maxlen=3), 'u_6': deque([(7, 10), (7, 10), (7, 10)], maxlen=3), 'u_7': deque([(8, 10), (8, 10)], maxlen=3)}
82: Looks like a stuck worker u_5 - deque([(8, 9), (8, 9), (8, 9)], maxlen=3)

82: Looks like a stuck worker u_6 - deque([(7, 10), (7, 10), (7, 10)], maxlen=3)

82: Looks like a stuck worker u_7 - deque([(8, 10), (8, 10)], maxlen=3)

83 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 9), (5, 9), (5, 9)], maxlen=3)}
83 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 9), (8, 9), (8, 10)], maxlen=3), 'u_6': deque([(7, 10), (7, 10), (7, 11)], maxlen=3), 'u_7': deque([(8, 10), (8, 10), (7, 10)], maxlen=3)}
83: Looks like a stuck worker u_4 - deque([(5, 9), (5, 9), (5, 9)], maxlen=3)

84 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 9), (5, 9), (4, 9)], maxlen=3)}
84 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 9), (8, 10), (8, 9)], maxlen=3), 'u_6': deque([(7, 10), (7, 11), (7, 11)], maxlen=3), 'u_7': deque([(8, 10), (7, 10), (7, 9)], maxlen=3)}
84: Doing research! 

85 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 9), (4, 9), (4, 9)], maxlen=3)}
85 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 10), (8, 9), (8, 9)], maxlen=3), 'u_6': deque([(7, 11), (7, 11), (7, 10)], maxlen=3), 'u_7': deque([(7, 10), (7, 9), (7, 9)], maxlen=3)}
86 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 9), (4, 9), (4, 9)], maxlen=3)}
86 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 9), (8, 9), (8, 9)], maxlen=3), 'u_6': deque([(7, 11), (7, 10), (7, 10)], maxlen=3), 'u_7': deque([(7, 9), (7, 9), (7, 9)], maxlen=3)}
86: Looks like a stuck worker u_5 - deque([(8, 9), (8, 9), (8, 9)], maxlen=3)

86: Looks like a stuck worker u_4 - deque([(4, 9), (4, 9), (4, 9)], maxlen=3)

86: Looks like a stuck worker u_7 - deque([(7, 9), (7, 9), (7, 9)], maxlen=3)

87 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 9), (4, 9), (3, 9)], maxlen=3)}
87 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 9), (8, 9), (8, 10)], maxlen=3), 'u_6': deque([(7, 10), (7, 10), (7, 9)], maxlen=3), 'u_7': deque([(7, 9), (7, 9), (6, 9)], maxlen=3)}
88 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 9), (3, 9), (3, 9)], maxlen=3)}
88 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 9), (8, 10), (8, 9)], maxlen=3), 'u_6': deque([(7, 10), (7, 9), (7, 9)], maxlen=3), 'u_7': deque([(7, 9), (6, 9), (6, 9)], maxlen=3)}
89 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 9), (3, 9)], maxlen=3)}
89 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 10), (8, 9), (8, 9)], maxlen=3), 'u_6': deque([(7, 9), (7, 9), (7, 9)], maxlen=3), 'u_7': deque([(6, 9), (6, 9), (6, 9)], maxlen=3)}
89: Looks like a stuck worker u_4 - deque([(3, 9), (3, 9), (3, 9)], maxlen=3)

89: Looks like a stuck worker u_6 - deque([(7, 9), (7, 9), (7, 9)], maxlen=3)

89: Looks like a stuck worker u_7 - deque([(6, 9), (6, 9), (6, 9)], maxlen=3)

90 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 9), (3, 8)], maxlen=3)}
90 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 9), (8, 9), (8, 9)], maxlen=3), 'u_6': deque([(7, 9), (7, 9), (7, 10)], maxlen=3), 'u_7': deque([(6, 9), (6, 9), (6, 8)], maxlen=3)}
90: Looks like a stuck worker u_5 - deque([(8, 9), (8, 9), (8, 9)], maxlen=3)

90: Doing research! 

90: Doing research! 

91 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 8), (3, 8)], maxlen=3)}
91 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 9), (8, 9), (9, 9)], maxlen=3), 'u_6': deque([(7, 9), (7, 10), (7, 9)], maxlen=3), 'u_7': deque([(6, 9), (6, 8), (6, 8)], maxlen=3)}
92 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 8), (3, 8), (3, 8)], maxlen=3)}
92 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 9), (9, 9), (9, 9)], maxlen=3), 'u_6': deque([(7, 10), (7, 9), (7, 9)], maxlen=3), 'u_7': deque([(6, 8), (6, 8), (7, 8)], maxlen=3)}
92: Looks like a stuck worker u_4 - deque([(3, 8), (3, 8), (3, 8)], maxlen=3)

92: Stuff needed for building a City (c_2) fuel: 734.0, size: 3, enough fuel: False

92: We WANT to build a city!

92: Something likely went wrong, couldn't find any empty tile

92: Building City around standard area <lux.game_objects.CityTile object at 0x7f922ba51d30> 

92: Unit error 'NoneType' object has no attribute 'pos' 

93 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 8), (3, 8), (3, 7)], maxlen=3)}
93 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 9), (9, 9), (9, 9)], maxlen=3), 'u_6': deque([(7, 9), (7, 9), (8, 9)], maxlen=3), 'u_7': deque([(6, 8), (7, 8), (7, 8)], maxlen=3)}
93: Looks like a stuck worker u_5 - deque([(9, 9), (9, 9), (9, 9)], maxlen=3)

94 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 9), (9, 9), (9, 10)], maxlen=3), 'u_6': deque([(7, 9), (8, 9), (8, 9)], maxlen=3), 'u_7': deque([(7, 8), (7, 8), (8, 8)], maxlen=3)}
94 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 8), (3, 7), (3, 7)], maxlen=3)}
94: Stuff needed for building a City (c_2) fuel: 734.0, size: 3, enough fuel: False

94: We WANT to build a city!

94: Something likely went wrong, couldn't find any empty tile

94: Building City around standard area <lux.game_objects.CityTile object at 0x7f922ba53040> 

94: Unit error 'NoneType' object has no attribute 'pos' 

94: Doing research! 

95 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 7), (3, 7), (3, 7)], maxlen=3)}
95 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 9), (9, 10), (9, 10)], maxlen=3), 'u_6': deque([(8, 9), (8, 9), (8, 9)], maxlen=3), 'u_7': deque([(7, 8), (8, 8), (8, 8)], maxlen=3)}
95: Looks like a stuck worker u_4 - deque([(3, 7), (3, 7), (3, 7)], maxlen=3)

95: Stuff needed for building a City (c_2) fuel: 734.0, size: 3, enough fuel: False

95: We WANT to build a city!

95: Something likely went wrong, couldn't find any empty tile

95: Building City around standard area <lux.game_objects.CityTile object at 0x7f922ba48b20> 

95: Unit error 'NoneType' object has no attribute 'pos' 

95: Looks like a stuck worker u_6 - deque([(8, 9), (8, 9), (8, 9)], maxlen=3)

95: Stuff needed for building a City (c_2) fuel: 734.0, size: 3, enough fuel: False

95: We WANT to build a city!

95: Something likely went wrong, couldn't find any empty tile

95: Building City around standard area <lux.game_objects.CityTile object at 0x7f922ba48b20> 

95: Unit error 'NoneType' object has no attribute 'pos' 

96 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 7), (3, 7), (3, 8)], maxlen=3)}
96 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 10), (9, 10), (9, 10)], maxlen=3), 'u_6': deque([(8, 9), (8, 9), (9, 9)], maxlen=3), 'u_7': deque([(8, 8), (8, 8), (8, 8)], maxlen=3)}
96: Looks like a stuck worker u_5 - deque([(9, 10), (9, 10), (9, 10)], maxlen=3)

96: Looks like a stuck worker u_7 - deque([(8, 8), (8, 8), (8, 8)], maxlen=3)

97 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 7), (3, 8), (3, 8)], maxlen=3)}
97 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 10), (9, 10), (9, 11)], maxlen=3), 'u_6': deque([(8, 9), (9, 9), (9, 9)], maxlen=3), 'u_7': deque([(8, 8), (8, 8), (9, 8)], maxlen=3)}
97: Stuff needed for building a City (c_2) fuel: 734.0, size: 3, enough fuel: False

98 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 8), (3, 8), (3, 8)], maxlen=3)}
98 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 10), (9, 11), (9, 11)], maxlen=3), 'u_6': deque([(9, 9), (9, 9), (9, 10)], maxlen=3), 'u_7': deque([(8, 8), (9, 8), (9, 8)], maxlen=3)}
98: Looks like a stuck worker u_4 - deque([(3, 8), (3, 8), (3, 8)], maxlen=3)

98: Stuff needed for building a City (c_2) fuel: 734.0, size: 3, enough fuel: False

98: We WANT to build a city!

98: Something likely went wrong, couldn't find any empty tile

98: Building City around standard area <lux.game_objects.CityTile object at 0x7f922ba545b0> 

98: Unit error 'NoneType' object has no attribute 'pos' 

98: Stuff needed for building a City (c_2) fuel: 734.0, size: 3, enough fuel: False

98: We WANT to build a city!

98: Something likely went wrong, couldn't find any empty tile

98: Building City around standard area <lux.game_objects.CityTile object at 0x7f922ba545b0> 

98: Unit error 'NoneType' object has no attribute 'pos' 

99 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 8), (3, 8), (3, 9)], maxlen=3)}
99 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 11), (9, 11), (9, 11)], maxlen=3), 'u_6': deque([(9, 9), (9, 10), (9, 10)], maxlen=3), 'u_7': deque([(9, 8), (9, 8), (9, 8)], maxlen=3)}
99: ### Found a hight density position:[0, 3] ###

99: ### Found a hight density position:[0, 3] ###

99 Defining Max Density area
99 Defining Max Density area
99: Looks like a stuck worker u_5 - deque([(9, 11), (9, 11), (9, 11)], maxlen=3)

99: ### Found a hight density position:[0, 3] ###

99 Defining Max Density area
99: Stuff needed for building a City (c_2) fuel: 734.0, size: 3, enough fuel: False

99: We WANT to build a city!

99: Something likely went wrong, couldn't find any empty tile

99: Building City around standard area <lux.game_objects.CityTile object at 0x7f922ba45160> 

99: Unit error 'NoneType' object has no attribute 'pos' 

99: ### Found a hight density position:[0, 3] ###

99 Defining Max Density area
99: Looks like a stuck worker u_7 - deque([(9, 8), (9, 8), (9, 8)], maxlen=3)

100 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 11), (9, 11), (9, 11)], maxlen=3), 'u_6': deque([(9, 10), (9, 10), (9, 10)], maxlen=3), 'u_7': deque([(9, 8), (9, 8), (10, 8)], maxlen=3)}
100 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 8), (3, 9), (3, 9)], maxlen=3)}
100: Looks like a stuck worker u_5 - deque([(9, 11), (9, 11), (9, 11)], maxlen=3)

100: Looks like a stuck worker u_6 - deque([(9, 10), (9, 10), (9, 10)], maxlen=3)

100: Doing research! 

100: Doing research! 

101 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 9), (3, 9)], maxlen=3)}
101 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 11), (9, 11), (9, 10)], maxlen=3), 'u_6': deque([(9, 10), (9, 10), (10, 10)], maxlen=3), 'u_7': deque([(9, 8), (10, 8), (10, 8)], maxlen=3)}
101: Stuff needed for building a City (c_2) fuel: 734.0, size: 3, enough fuel: False

101: Looks like a stuck worker u_4 - deque([(3, 9), (3, 9), (3, 9)], maxlen=3)

102 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 9), (3, 10)], maxlen=3)}
102 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 11), (9, 10), (9, 10)], maxlen=3), 'u_6': deque([(9, 10), (10, 10), (10, 10)], maxlen=3), 'u_7': deque([(10, 8), (10, 8), (10, 9)], maxlen=3)}
102: Stuff needed for building a City (c_2) fuel: 734.0, size: 3, enough fuel: False

102: We WANT to build a city!

102: Found build location:(11, 3)

102: Building City in max area [0, 3] 

102: Navigating to where we wish to build!

102: dir_diff: (2, -7) xdiff: 2 ydiff: -7

102: ### Actions: ['m u_5 n']

102: Stuff needed for building a City (c_2) fuel: 734.0, size: 3, enough fuel: False

102: We WANT to build a city!

102: Found build location:(11, 3)

102: Building City in max area [0, 3] 

102: Navigating to where we wish to build!

102: dir_diff: (1, -7) xdiff: 1 ydiff: -7

102: ### Actions: ['m u_5 n', 'm u_6 n']

103 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 10), (3, 10)], maxlen=3)}
103 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 10), (9, 10), (9, 9)], maxlen=3), 'u_6': deque([(10, 10), (10, 10), (10, 10)], maxlen=3), 'u_7': deque([(10, 8), (10, 9), (10, 9)], maxlen=3)}
103: Looks like a stuck worker u_6 - deque([(10, 10), (10, 10), (10, 10)], maxlen=3)

103: Stuff needed for building a City (c_2) fuel: 734.0, size: 3, enough fuel: False

104 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 10), (3, 10)], maxlen=3)}
104 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 10), (9, 9), (9, 9)], maxlen=3), 'u_6': deque([(10, 10), (10, 10), (10, 11)], maxlen=3), 'u_7': deque([(10, 9), (10, 9), (10, 10)], maxlen=3)}
104: Stuff needed for building a City (c_2) fuel: 734.0, size: 3, enough fuel: False

104: Looks like a stuck worker u_4 - deque([(3, 10), (3, 10), (3, 10)], maxlen=3)

104: We WANT to build a city!

104: Navigating to where we wish to build!

104: dir_diff: (2, -6) xdiff: 2 ydiff: -6

104: ### Actions: ['m u_5 n']

104: Doing research! 

105 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 10), (2, 10)], maxlen=3)}
105 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 9), (9, 9), (9, 8)], maxlen=3), 'u_6': deque([(10, 10), (10, 11), (10, 11)], maxlen=3), 'u_7': deque([(10, 9), (10, 10), (10, 10)], maxlen=3)}
105: Stuff needed for building a City (c_2) fuel: 734.0, size: 3, enough fuel: False

105: We WANT to build a city!

105: Navigating to where we wish to build!

105: dir_diff: (1, -8) xdiff: 1 ydiff: -8

105: ### Actions: ['m u_6 n']

105: Stuff needed for building a City (c_2) fuel: 734.0, size: 3, enough fuel: False

106 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (2, 10), (2, 10)], maxlen=3)}
106 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 9), (9, 8), (9, 8)], maxlen=3), 'u_6': deque([(10, 11), (10, 11), (10, 10)], maxlen=3), 'u_7': deque([(10, 10), (10, 10), (9, 10)], maxlen=3)}
106: Stuff needed for building a City (c_2) fuel: 734.0, size: 3, enough fuel: False

106: We WANT to build a city!

106: Navigating to where we wish to build!

106: dir_diff: (2, -5) xdiff: 2 ydiff: -5

106: ### Actions: ['m u_5 n']

107 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 10), (2, 10), (2, 10)], maxlen=3)}
107 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 8), (9, 8), (9, 7)], maxlen=3), 'u_6': deque([(10, 11), (10, 10), (10, 10)], maxlen=3), 'u_7': deque([(10, 10), (9, 10), (9, 10)], maxlen=3)}
107: Stuff needed for building a City (c_2) fuel: 734.0, size: 3, enough fuel: False

107: Looks like a stuck worker u_4 - deque([(2, 10), (2, 10), (2, 10)], maxlen=3)

107: Stuff needed for building a City (c_2) fuel: 734.0, size: 3, enough fuel: False

107: We WANT to build a city!

107: Found build location:(11, 3)

107: Building City in max area [0, 3] 

107: Navigating to where we wish to build!

107: dir_diff: (2, -7) xdiff: 2 ydiff: -7

107: ### Actions: ['m u_6 w', 'm u_7 n']

108 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 10), (2, 10), (3, 10)], maxlen=3)}
108 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 8), (9, 7), (9, 7)], maxlen=3), 'u_6': deque([(10, 10), (10, 10), (9, 10)], maxlen=3), 'u_7': deque([(9, 10), (9, 10), (9, 9)], maxlen=3)}
108: Stuff needed for building a City (c_2) fuel: 734.0, size: 3, enough fuel: False

109 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 10), (3, 10), (3, 10)], maxlen=3)}
109 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 7), (9, 7), (9, 8)], maxlen=3), 'u_6': deque([(10, 10), (9, 10), (9, 10)], maxlen=3), 'u_7': deque([(9, 10), (9, 9), (9, 9)], maxlen=3)}
109: Stuff needed for building a City (c_2) fuel: 734.0, size: 3, enough fuel: False

109: Stuff needed for building a City (c_2) fuel: 734.0, size: 3, enough fuel: False

109: We WANT to build a city!

109: Navigating to where we wish to build!

109: dir_diff: (2, -6) xdiff: 2 ydiff: -6

109: ### Actions: ['m u_6 w', 'm u_7 n']

110 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 10), (3, 10)], maxlen=3)}
110 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 7), (9, 8), (9, 8)], maxlen=3), 'u_6': deque([(9, 10), (9, 10), (8, 10)], maxlen=3), 'u_7': deque([(9, 9), (9, 9), (9, 9)], maxlen=3)}
110: Looks like a stuck worker u_4 - deque([(3, 10), (3, 10), (3, 10)], maxlen=3)

110: Stuff needed for building a City (c_2) fuel: 834.0, size: 3, enough fuel: True

110: We WANT to build a city!

110: Navigating to where we wish to build!

110: dir_diff: (2, -5) xdiff: 2 ydiff: -5

110: ### Actions: ['m u_5 n']

110: Looks like a stuck worker u_7 - deque([(9, 9), (9, 9), (9, 9)], maxlen=3)

110: Doing research! 

110: Doing research! 

111 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 10), (3, 11)], maxlen=3)}
111 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 8), (9, 8), (9, 7)], maxlen=3), 'u_6': deque([(9, 10), (8, 10), (8, 9)], maxlen=3), 'u_7': deque([(9, 9), (9, 9), (10, 9)], maxlen=3)}
112 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 11), (3, 11)], maxlen=3)}
112 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 8), (9, 7), (9, 7)], maxlen=3), 'u_6': deque([(8, 10), (8, 9), (8, 9)], maxlen=3), 'u_7': deque([(9, 9), (10, 9), (10, 9)], maxlen=3)}
113 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 11), (3, 11), (3, 11)], maxlen=3)}
113 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 7), (9, 7), (9, 7)], maxlen=3), 'u_6': deque([(8, 9), (8, 9), (8, 9)], maxlen=3), 'u_7': deque([(10, 9), (10, 9), (10, 9)], maxlen=3)}
114 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 11), (3, 11), (3, 11)], maxlen=3)}
114 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 7), (9, 7), (9, 7)], maxlen=3), 'u_6': deque([(8, 9), (8, 9), (8, 9)], maxlen=3), 'u_7': deque([(10, 9), (10, 9), (10, 9)], maxlen=3)}
114: Looks like a stuck worker u_4 - deque([(3, 11), (3, 11), (3, 11)], maxlen=3)

114: Looks like a stuck worker u_5 - deque([(9, 7), (9, 7), (9, 7)], maxlen=3)

114: Looks like a stuck worker u_6 - deque([(8, 9), (8, 9), (8, 9)], maxlen=3)

114: Looks like a stuck worker u_7 - deque([(10, 9), (10, 9), (10, 9)], maxlen=3)

114: Doing research! 

115 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 11), (3, 11), (2, 11)], maxlen=3)}
115 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 7), (9, 7), (9, 6)], maxlen=3), 'u_6': deque([(8, 9), (8, 9), (8, 9)], maxlen=3), 'u_7': deque([(10, 9), (10, 9), (10, 9)], maxlen=3)}
115: Looks like a stuck worker u_6 - deque([(8, 9), (8, 9), (8, 9)], maxlen=3)

115: Looks like a stuck worker u_7 - deque([(10, 9), (10, 9), (10, 9)], maxlen=3)

116 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 11), (2, 11), (2, 11)], maxlen=3)}
116 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 7), (9, 6), (9, 6)], maxlen=3), 'u_6': deque([(8, 9), (8, 9), (8, 8)], maxlen=3), 'u_7': deque([(10, 9), (10, 9), (10, 8)], maxlen=3)}
117 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 11), (2, 11), (2, 11)], maxlen=3)}
117 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 6), (9, 6), (9, 6)], maxlen=3), 'u_6': deque([(8, 9), (8, 8), (8, 8)], maxlen=3), 'u_7': deque([(10, 9), (10, 8), (10, 8)], maxlen=3)}
118 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 11), (2, 11), (2, 11)], maxlen=3)}
118 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 6), (9, 6), (9, 6)], maxlen=3), 'u_6': deque([(8, 8), (8, 8), (8, 8)], maxlen=3), 'u_7': deque([(10, 8), (10, 8), (10, 8)], maxlen=3)}
118: Looks like a stuck worker u_4 - deque([(2, 11), (2, 11), (2, 11)], maxlen=3)

118: Looks like a stuck worker u_5 - deque([(9, 6), (9, 6), (9, 6)], maxlen=3)

119 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 11), (2, 11), (2, 10)], maxlen=3)}
119 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 6), (9, 6), (9, 5)], maxlen=3), 'u_6': deque([(8, 8), (8, 8), (8, 8)], maxlen=3), 'u_7': deque([(10, 8), (10, 8), (10, 8)], maxlen=3)}
119: Looks like a stuck worker u_6 - deque([(8, 8), (8, 8), (8, 8)], maxlen=3)

119: Looks like a stuck worker u_7 - deque([(10, 8), (10, 8), (10, 8)], maxlen=3)

120 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 6), (9, 5), (9, 5)], maxlen=3), 'u_6': deque([(8, 8), (8, 8), (8, 7)], maxlen=3), 'u_7': deque([(10, 8), (10, 8), (11, 8)], maxlen=3)}
120 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 11), (2, 10), (2, 10)], maxlen=3)}
120: Doing research! 

120: Doing research! 

121 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 10), (2, 10), (2, 10)], maxlen=3)}
121 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 5), (9, 5), (9, 5)], maxlen=3), 'u_6': deque([(8, 8), (8, 7), (8, 7)], maxlen=3), 'u_7': deque([(10, 8), (11, 8), (11, 8)], maxlen=3)}
122 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 10), (2, 10), (2, 10)], maxlen=3)}
122 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 5), (9, 5), (9, 5)], maxlen=3), 'u_6': deque([(8, 7), (8, 7), (8, 7)], maxlen=3), 'u_7': deque([(11, 8), (11, 8), (11, 8)], maxlen=3)}
122: Looks like a stuck worker u_4 - deque([(2, 10), (2, 10), (2, 10)], maxlen=3)

122: Looks like a stuck worker u_5 - deque([(9, 5), (9, 5), (9, 5)], maxlen=3)

123 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 10), (2, 10), (3, 10)], maxlen=3)}
123 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 5), (9, 5), (9, 6)], maxlen=3), 'u_6': deque([(8, 7), (8, 7), (8, 7)], maxlen=3), 'u_7': deque([(11, 8), (11, 8), (11, 8)], maxlen=3)}
123: Looks like a stuck worker u_6 - deque([(8, 7), (8, 7), (8, 7)], maxlen=3)

123: Looks like a stuck worker u_7 - deque([(11, 8), (11, 8), (11, 8)], maxlen=3)

124 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 10), (3, 10), (3, 10)], maxlen=3)}
124 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 5), (9, 6), (9, 6)], maxlen=3), 'u_6': deque([(8, 7), (8, 7), (9, 7)], maxlen=3), 'u_7': deque([(11, 8), (11, 8), (11, 9)], maxlen=3)}
124: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

124: Doing research! 

125 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 10), (3, 10)], maxlen=3)}
125 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 6), (9, 6), (9, 6)], maxlen=3), 'u_6': deque([(8, 7), (9, 7), (9, 7)], maxlen=3), 'u_7': deque([(11, 8), (11, 9), (11, 9)], maxlen=3)}
125: Looks like a stuck worker u_5 - deque([(9, 6), (9, 6), (9, 6)], maxlen=3)

125: Looks like a stuck worker u_4 - deque([(3, 10), (3, 10), (3, 10)], maxlen=3)

125: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

125: We WANT to build a city!

125: Navigating to where we wish to build!

125: dir_diff: (2, -4) xdiff: 2 ydiff: -4

125: ### Actions: ['m u_5 w', 'm u_6 n']

126 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 10), (4, 10)], maxlen=3)}
126 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 6), (9, 6), (8, 6)], maxlen=3), 'u_6': deque([(9, 7), (9, 7), (9, 6)], maxlen=3), 'u_7': deque([(11, 9), (11, 9), (10, 9)], maxlen=3)}
127 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (4, 10), (4, 10)], maxlen=3)}
127 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 6), (8, 6), (8, 6)], maxlen=3), 'u_6': deque([(9, 7), (9, 6), (9, 6)], maxlen=3), 'u_7': deque([(11, 9), (10, 9), (10, 9)], maxlen=3)}
127: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

127: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

127: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

127: We WANT to build a city!

127: Navigating to where we wish to build!

127: dir_diff: (1, -6) xdiff: 1 ydiff: -6

127: ### Actions: ['m u_5 s', 'm u_6 s', 'm u_7 n']

128 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 10), (4, 10), (4, 10)], maxlen=3)}
128 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 6), (8, 6), (8, 7)], maxlen=3), 'u_6': deque([(9, 6), (9, 6), (9, 7)], maxlen=3), 'u_7': deque([(10, 9), (10, 9), (10, 8)], maxlen=3)}
128: Looks like a stuck worker u_4 - deque([(4, 10), (4, 10), (4, 10)], maxlen=3)

129 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 10), (4, 10), (3, 10)], maxlen=3)}
129 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 6), (8, 7), (8, 7)], maxlen=3), 'u_6': deque([(9, 6), (9, 7), (9, 7)], maxlen=3), 'u_7': deque([(10, 9), (10, 8), (10, 8)], maxlen=3)}
129: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

129: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

129: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

130 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 10), (3, 10), (3, 10)], maxlen=3)}
130 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 7), (8, 7), (8, 8)], maxlen=3), 'u_6': deque([(9, 7), (9, 7), (9, 8)], maxlen=3), 'u_7': deque([(10, 8), (10, 8), (10, 9)], maxlen=3)}
130: Doing research! 

130: Doing research! 

131 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 10), (3, 10)], maxlen=3)}
131 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 7), (8, 8), (8, 8)], maxlen=3), 'u_6': deque([(9, 7), (9, 8), (9, 8)], maxlen=3), 'u_7': deque([(10, 8), (10, 9), (10, 9)], maxlen=3)}
131: Looks like a stuck worker u_4 - deque([(3, 10), (3, 10), (3, 10)], maxlen=3)

131: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

131: We WANT to build a city!

131: Navigating to where we wish to build!

131: dir_diff: (3, -5) xdiff: 3 ydiff: -5

131: ### Actions: ['m u_5 n']

131: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

131: We WANT to build a city!

131: Navigating to where we wish to build!

131: dir_diff: (2, -5) xdiff: 2 ydiff: -5

131: ### Actions: ['m u_5 n', 'm u_6 n']

131: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

131: We WANT to build a city!

131: Navigating to where we wish to build!

131: dir_diff: (1, -6) xdiff: 1 ydiff: -6

131: ### Actions: ['m u_5 n', 'm u_6 n', 'm u_7 n']

132 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 10), (4, 10)], maxlen=3)}
132 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 8), (8, 8), (8, 7)], maxlen=3), 'u_6': deque([(9, 8), (9, 8), (9, 7)], maxlen=3), 'u_7': deque([(10, 9), (10, 9), (10, 8)], maxlen=3)}
133 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (4, 10), (4, 10)], maxlen=3)}
133 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 8), (8, 7), (8, 7)], maxlen=3), 'u_6': deque([(9, 8), (9, 7), (9, 7)], maxlen=3), 'u_7': deque([(10, 9), (10, 8), (10, 8)], maxlen=3)}
133: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

133: We WANT to build a city!

133: Navigating to where we wish to build!

133: dir_diff: (3, -4) xdiff: 3 ydiff: -4

133: ### Actions: ['m u_5 n']

133: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

133: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

133: We WANT to build a city!

133: Navigating to where we wish to build!

133: dir_diff: (1, -5) xdiff: 1 ydiff: -5

133: ### Actions: ['m u_5 n', 'm u_6 s', 'm u_7 n']

134 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 10), (4, 10), (4, 10)], maxlen=3)}
134 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 7), (8, 7), (8, 6)], maxlen=3), 'u_6': deque([(9, 7), (9, 7), (9, 8)], maxlen=3), 'u_7': deque([(10, 8), (10, 8), (10, 7)], maxlen=3)}
134: Doing research! 

134: Looks like a stuck worker u_4 - deque([(4, 10), (4, 10), (4, 10)], maxlen=3)

135 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 10), (4, 10), (3, 10)], maxlen=3)}
135 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 7), (8, 6), (8, 6)], maxlen=3), 'u_6': deque([(9, 7), (9, 8), (9, 8)], maxlen=3), 'u_7': deque([(10, 8), (10, 7), (10, 7)], maxlen=3)}
135: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

135: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

135: We WANT to build a city!

135: Navigating to where we wish to build!

135: dir_diff: (2, -5) xdiff: 2 ydiff: -5

135: ### Actions: ['m u_5 s', 'm u_6 n']

135: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

136 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 10), (3, 10), (3, 10)], maxlen=3)}
136 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 6), (8, 6), (8, 7)], maxlen=3), 'u_6': deque([(9, 8), (9, 8), (9, 7)], maxlen=3), 'u_7': deque([(10, 7), (10, 7), (10, 8)], maxlen=3)}
137 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 10), (3, 10)], maxlen=3)}
137 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 6), (8, 7), (8, 7)], maxlen=3), 'u_6': deque([(9, 8), (9, 7), (9, 7)], maxlen=3), 'u_7': deque([(10, 7), (10, 8), (10, 8)], maxlen=3)}
137: Looks like a stuck worker u_4 - deque([(3, 10), (3, 10), (3, 10)], maxlen=3)

137: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

137: We WANT to build a city!

137: Navigating to where we wish to build!

137: dir_diff: (3, -4) xdiff: 3 ydiff: -4

137: ### Actions: ['m u_5 n']

137: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

137: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

137: We WANT to build a city!

137: Navigating to where we wish to build!

137: dir_diff: (1, -5) xdiff: 1 ydiff: -5

137: ### Actions: ['m u_5 n', 'm u_6 s', 'm u_7 n']

138 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 10), (3, 9)], maxlen=3)}
138 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 7), (8, 7), (8, 6)], maxlen=3), 'u_6': deque([(9, 7), (9, 7), (9, 8)], maxlen=3), 'u_7': deque([(10, 8), (10, 8), (10, 7)], maxlen=3)}
139 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 9), (3, 9)], maxlen=3)}
139 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 7), (8, 6), (8, 6)], maxlen=3), 'u_6': deque([(9, 7), (9, 8), (9, 8)], maxlen=3), 'u_7': deque([(10, 8), (10, 7), (10, 7)], maxlen=3)}
139: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

139: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

139: We WANT to build a city!

139: Navigating to where we wish to build!

139: dir_diff: (2, -5) xdiff: 2 ydiff: -5

139: ### Actions: ['m u_5 s', 'm u_6 n']

139: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

139: We WANT to build a city!

139: Navigating to where we wish to build!

139: dir_diff: (1, -4) xdiff: 1 ydiff: -4

139: ### Actions: ['m u_5 s', 'm u_6 n', 'm u_7 n']

140 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 9), (3, 9)], maxlen=3)}
140 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 6), (8, 6), (8, 7)], maxlen=3), 'u_6': deque([(9, 8), (9, 8), (9, 7)], maxlen=3), 'u_7': deque([(10, 7), (10, 7), (10, 6)], maxlen=3)}
140: Doing research! 

140: Looks like a stuck worker u_4 - deque([(3, 9), (3, 9), (3, 9)], maxlen=3)

140: Doing research! 

141 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 9), (3, 8)], maxlen=3)}
141 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 6), (8, 7), (8, 7)], maxlen=3), 'u_6': deque([(9, 8), (9, 7), (9, 7)], maxlen=3), 'u_7': deque([(10, 7), (10, 6), (10, 6)], maxlen=3)}
141: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

141: We WANT to build a city!

141: Navigating to where we wish to build!

141: dir_diff: (3, -4) xdiff: 3 ydiff: -4

141: ### Actions: ['m u_5 n']

141: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

141: We WANT to build a city!

141: Navigating to where we wish to build!

141: dir_diff: (2, -4) xdiff: 2 ydiff: -4

141: ### Actions: ['m u_5 n', 'm u_6 n']

141: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

142 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 8), (3, 8)], maxlen=3)}
142 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 7), (8, 7), (8, 6)], maxlen=3), 'u_6': deque([(9, 7), (9, 7), (9, 6)], maxlen=3), 'u_7': deque([(10, 6), (10, 6), (10, 7)], maxlen=3)}
143 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 8), (3, 8), (3, 8)], maxlen=3)}
143 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 7), (8, 6), (8, 6)], maxlen=3), 'u_6': deque([(9, 7), (9, 6), (9, 6)], maxlen=3), 'u_7': deque([(10, 6), (10, 7), (10, 7)], maxlen=3)}
143: Looks like a stuck worker u_4 - deque([(3, 8), (3, 8), (3, 8)], maxlen=3)

143: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

143: We WANT to build a city!

143: Navigating to where we wish to build!

143: dir_diff: (3, -3) xdiff: 3 ydiff: -3

143: ### Actions: ['m u_5 e']

143: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

143: We WANT to build a city!

143: Navigating to where we wish to build!

143: dir_diff: (2, -3) xdiff: 2 ydiff: -3

143: ### Actions: ['m u_5 e', 'm u_6 n']

143: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

144 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 8), (3, 8), (2, 8)], maxlen=3)}
144 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 6), (8, 6), (9, 6)], maxlen=3), 'u_6': deque([(9, 6), (9, 6), (9, 5)], maxlen=3), 'u_7': deque([(10, 7), (10, 7), (10, 8)], maxlen=3)}
144: Doing research! 

145 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 8), (2, 8), (2, 8)], maxlen=3)}
145 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 6), (9, 6), (9, 6)], maxlen=3), 'u_6': deque([(9, 6), (9, 5), (9, 5)], maxlen=3), 'u_7': deque([(10, 7), (10, 8), (10, 8)], maxlen=3)}
145: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

145: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

145: We WANT to build a city!

145: Navigating to where we wish to build!

145: dir_diff: (2, -2) xdiff: 2 ydiff: -2

145: ### Actions: ['m u_5 s', 'm u_6 e']

145: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

146 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 8), (2, 8), (2, 8)], maxlen=3)}
146 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 6), (9, 6), (9, 7)], maxlen=3), 'u_6': deque([(9, 5), (9, 5), (10, 5)], maxlen=3), 'u_7': deque([(10, 8), (10, 8), (10, 9)], maxlen=3)}
146: Looks like a stuck worker u_4 - deque([(2, 8), (2, 8), (2, 8)], maxlen=3)

147 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 8), (2, 8), (2, 9)], maxlen=3)}
147 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 6), (9, 7), (9, 7)], maxlen=3), 'u_6': deque([(9, 5), (10, 5), (10, 5)], maxlen=3), 'u_7': deque([(10, 8), (10, 9), (10, 9)], maxlen=3)}
147: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

147: We WANT to build a city!

147: Navigating to where we wish to build!

147: dir_diff: (2, -4) xdiff: 2 ydiff: -4

147: ### Actions: ['m u_5 n']

147: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

147: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

148 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 8), (2, 9), (2, 9)], maxlen=3)}
148 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 7), (9, 7), (9, 6)], maxlen=3), 'u_6': deque([(10, 5), (10, 5), (10, 6)], maxlen=3), 'u_7': deque([(10, 9), (10, 9), (10, 10)], maxlen=3)}
149 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 9), (2, 9), (2, 9)], maxlen=3)}
149 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 7), (9, 6), (9, 6)], maxlen=3), 'u_6': deque([(10, 5), (10, 6), (10, 6)], maxlen=3), 'u_7': deque([(10, 9), (10, 10), (10, 10)], maxlen=3)}
149: Looks like a stuck worker u_4 - deque([(2, 9), (2, 9), (2, 9)], maxlen=3)

149: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

149: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

149: We WANT to build a city!

149: Navigating to where we wish to build!

149: dir_diff: (1, -3) xdiff: 1 ydiff: -3

149: ### Actions: ['m u_5 s', 'm u_6 n']

149: Stuff needed for building a City (c_2) fuel: 344.0, size: 3, enough fuel: False

150 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 9), (2, 9), (2, 8)], maxlen=3)}
150 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 6), (9, 6), (9, 7)], maxlen=3), 'u_6': deque([(10, 6), (10, 6), (10, 5)], maxlen=3), 'u_7': deque([(10, 10), (10, 10), (9, 10)], maxlen=3)}
150: Doing research! 

150: Doing research! 

151 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 9), (2, 8), (2, 8)], maxlen=3)}
151 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 6), (9, 7), (9, 7)], maxlen=3), 'u_6': deque([(10, 6), (10, 5), (10, 5)], maxlen=3), 'u_7': deque([(10, 10), (9, 10), (9, 10)], maxlen=3)}
152 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 8), (2, 8), (3, 8)], maxlen=3)}
152 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 7), (9, 7), (9, 8)], maxlen=3), 'u_6': deque([(10, 5), (10, 5), (10, 6)], maxlen=3), 'u_7': deque([(9, 10), (9, 10), (9, 9)], maxlen=3)}
153 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 8), (3, 8), (3, 8)], maxlen=3)}
153 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 7), (9, 8), (9, 8)], maxlen=3), 'u_6': deque([(10, 5), (10, 6), (10, 6)], maxlen=3), 'u_7': deque([(9, 10), (9, 9), (9, 9)], maxlen=3)}
154 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 8), (3, 8), (3, 8)], maxlen=3)}
154 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 8), (9, 8), (9, 8)], maxlen=3), 'u_6': deque([(10, 6), (10, 6), (10, 6)], maxlen=3), 'u_7': deque([(9, 9), (9, 9), (9, 9)], maxlen=3)}
154: Doing research! 

155 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 8), (3, 8), (3, 8)], maxlen=3)}
155 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 8), (9, 8), (9, 8)], maxlen=3), 'u_6': deque([(10, 6), (10, 6), (10, 6)], maxlen=3), 'u_7': deque([(9, 9), (9, 9), (9, 9)], maxlen=3)}
155: Looks like a stuck worker u_4 - deque([(3, 8), (3, 8), (3, 8)], maxlen=3)

155: Looks like a stuck worker u_5 - deque([(9, 8), (9, 8), (9, 8)], maxlen=3)

155: Looks like a stuck worker u_6 - deque([(10, 6), (10, 6), (10, 6)], maxlen=3)

155: Looks like a stuck worker u_7 - deque([(9, 9), (9, 9), (9, 9)], maxlen=3)

156 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 8), (3, 8), (3, 9)], maxlen=3)}
156 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 8), (9, 8), (10, 8)], maxlen=3), 'u_6': deque([(10, 6), (10, 6), (10, 5)], maxlen=3), 'u_7': deque([(9, 9), (9, 9), (8, 9)], maxlen=3)}
157 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 8), (3, 9), (3, 9)], maxlen=3)}
157 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 8), (10, 8), (10, 8)], maxlen=3), 'u_6': deque([(10, 6), (10, 5), (10, 5)], maxlen=3), 'u_7': deque([(9, 9), (8, 9), (8, 9)], maxlen=3)}
158 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 9), (3, 9)], maxlen=3)}
158 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 8), (10, 8), (10, 8)], maxlen=3), 'u_6': deque([(10, 5), (10, 5), (10, 5)], maxlen=3), 'u_7': deque([(8, 9), (8, 9), (8, 9)], maxlen=3)}
159 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 9), (3, 9)], maxlen=3)}
159 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 8), (10, 8), (10, 8)], maxlen=3), 'u_6': deque([(10, 5), (10, 5), (10, 5)], maxlen=3), 'u_7': deque([(8, 9), (8, 9), (8, 9)], maxlen=3)}
159: Looks like a stuck worker u_5 - deque([(10, 8), (10, 8), (10, 8)], maxlen=3)

159: Looks like a stuck worker u_4 - deque([(3, 9), (3, 9), (3, 9)], maxlen=3)

159: Looks like a stuck worker u_6 - deque([(10, 5), (10, 5), (10, 5)], maxlen=3)

159: Looks like a stuck worker u_7 - deque([(8, 9), (8, 9), (8, 9)], maxlen=3)

160 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 9), (3, 10)], maxlen=3)}
160 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 8), (10, 8), (9, 8)], maxlen=3), 'u_6': deque([(10, 5), (10, 5), (10, 4)], maxlen=3), 'u_7': deque([(8, 9), (8, 9), (7, 9)], maxlen=3)}
161 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 10), (3, 10)], maxlen=3)}
161 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 8), (9, 8), (9, 8)], maxlen=3), 'u_6': deque([(10, 5), (10, 4), (10, 4)], maxlen=3), 'u_7': deque([(8, 9), (7, 9), (7, 9)], maxlen=3)}
162 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 10), (3, 10)], maxlen=3)}
162 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 8), (9, 8), (9, 8)], maxlen=3), 'u_6': deque([(10, 4), (10, 4), (10, 4)], maxlen=3), 'u_7': deque([(7, 9), (7, 9), (7, 9)], maxlen=3)}
163 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 10), (3, 10)], maxlen=3)}
163 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 8), (9, 8), (9, 8)], maxlen=3), 'u_6': deque([(10, 4), (10, 4), (10, 4)], maxlen=3), 'u_7': deque([(7, 9), (7, 9), (7, 9)], maxlen=3)}
163: Looks like a stuck worker u_4 - deque([(3, 10), (3, 10), (3, 10)], maxlen=3)

163: Looks like a stuck worker u_5 - deque([(9, 8), (9, 8), (9, 8)], maxlen=3)

163: Looks like a stuck worker u_6 - deque([(10, 4), (10, 4), (10, 4)], maxlen=3)

163: Looks like a stuck worker u_7 - deque([(7, 9), (7, 9), (7, 9)], maxlen=3)

164 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 10), (2, 10)], maxlen=3)}
164 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 8), (9, 8), (10, 8)], maxlen=3), 'u_6': deque([(10, 4), (10, 4), (9, 4)], maxlen=3), 'u_7': deque([(7, 9), (7, 9), (6, 9)], maxlen=3)}
165 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (2, 10), (2, 10)], maxlen=3)}
165 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 8), (10, 8), (10, 8)], maxlen=3), 'u_6': deque([(10, 4), (9, 4), (9, 4)], maxlen=3), 'u_7': deque([(7, 9), (6, 9), (6, 9)], maxlen=3)}
166 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 10), (2, 10), (2, 10)], maxlen=3)}
166 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 8), (10, 8), (10, 8)], maxlen=3), 'u_6': deque([(9, 4), (9, 4), (9, 4)], maxlen=3), 'u_7': deque([(6, 9), (6, 9), (6, 9)], maxlen=3)}
166: Looks like a stuck worker u_4 - deque([(2, 10), (2, 10), (2, 10)], maxlen=3)

166: Looks like a stuck worker u_5 - deque([(10, 8), (10, 8), (10, 8)], maxlen=3)

166: Looks like a stuck worker u_6 - deque([(9, 4), (9, 4), (9, 4)], maxlen=3)

166: Looks like a stuck worker u_7 - deque([(6, 9), (6, 9), (6, 9)], maxlen=3)

167 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 10), (2, 10), (3, 10)], maxlen=3)}
167 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 8), (10, 8), (9, 8)], maxlen=3), 'u_6': deque([(9, 4), (9, 4), (10, 4)], maxlen=3), 'u_7': deque([(6, 9), (6, 9), (5, 9)], maxlen=3)}
168 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 10), (3, 10), (3, 10)], maxlen=3)}
168 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 8), (9, 8), (9, 8)], maxlen=3), 'u_6': deque([(9, 4), (10, 4), (10, 4)], maxlen=3), 'u_7': deque([(6, 9), (5, 9), (5, 9)], maxlen=3)}
169 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 10), (3, 10)], maxlen=3)}
169 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 8), (9, 8), (9, 8)], maxlen=3), 'u_6': deque([(10, 4), (10, 4), (10, 4)], maxlen=3), 'u_7': deque([(5, 9), (5, 9), (5, 9)], maxlen=3)}
169: Looks like a stuck worker u_4 - deque([(3, 10), (3, 10), (3, 10)], maxlen=3)

169: Looks like a stuck worker u_5 - deque([(9, 8), (9, 8), (9, 8)], maxlen=3)

169: Looks like a stuck worker u_6 - deque([(10, 4), (10, 4), (10, 4)], maxlen=3)

169: Looks like a stuck worker u_7 - deque([(5, 9), (5, 9), (5, 9)], maxlen=3)

170 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 10), (3, 11)], maxlen=3)}
170 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 8), (9, 8), (9, 7)], maxlen=3), 'u_6': deque([(10, 4), (10, 4), (10, 3)], maxlen=3), 'u_7': deque([(5, 9), (5, 9), (5, 10)], maxlen=3)}
171 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 11), (3, 11)], maxlen=3)}
171 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 8), (9, 7), (9, 7)], maxlen=3), 'u_6': deque([(10, 4), (10, 3), (10, 3)], maxlen=3), 'u_7': deque([(5, 9), (5, 10), (5, 10)], maxlen=3)}
172 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 11), (3, 11), (3, 11)], maxlen=3)}
172 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 7), (9, 7), (9, 7)], maxlen=3), 'u_6': deque([(10, 3), (10, 3), (10, 3)], maxlen=3), 'u_7': deque([(5, 10), (5, 10), (5, 10)], maxlen=3)}
172: Looks like a stuck worker u_4 - deque([(3, 11), (3, 11), (3, 11)], maxlen=3)

172: Looks like a stuck worker u_5 - deque([(9, 7), (9, 7), (9, 7)], maxlen=3)

172: Looks like a stuck worker u_6 - deque([(10, 3), (10, 3), (10, 3)], maxlen=3)

172: Looks like a stuck worker u_7 - deque([(5, 10), (5, 10), (5, 10)], maxlen=3)

173 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 11), (3, 11), (4, 11)], maxlen=3)}
173 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 7), (9, 7), (9, 6)], maxlen=3), 'u_6': deque([(10, 3), (10, 3), (10, 2)], maxlen=3), 'u_7': deque([(5, 10), (5, 10), (6, 10)], maxlen=3)}
174 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 11), (4, 11), (4, 11)], maxlen=3)}
174 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 7), (9, 6), (9, 6)], maxlen=3), 'u_6': deque([(10, 3), (10, 2), (10, 2)], maxlen=3), 'u_7': deque([(5, 10), (6, 10), (6, 10)], maxlen=3)}
175 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 11), (4, 11), (4, 11)], maxlen=3)}
175 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 6), (9, 6), (9, 6)], maxlen=3), 'u_6': deque([(10, 2), (10, 2), (10, 2)], maxlen=3), 'u_7': deque([(6, 10), (6, 10), (6, 10)], maxlen=3)}
175: Looks like a stuck worker u_4 - deque([(4, 11), (4, 11), (4, 11)], maxlen=3)

175: Looks like a stuck worker u_5 - deque([(9, 6), (9, 6), (9, 6)], maxlen=3)

175: Looks like a stuck worker u_6 - deque([(10, 2), (10, 2), (10, 2)], maxlen=3)

175: Looks like a stuck worker u_7 - deque([(6, 10), (6, 10), (6, 10)], maxlen=3)

176 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 6), (9, 6), (9, 7)], maxlen=3), 'u_6': deque([(10, 2), (10, 2), (11, 2)], maxlen=3), 'u_7': deque([(6, 10), (6, 10), (6, 9)], maxlen=3)}
176 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 11), (4, 11), (3, 11)], maxlen=3)}
177 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 11), (3, 11), (3, 11)], maxlen=3)}
177 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 6), (9, 7), (9, 7)], maxlen=3), 'u_6': deque([(10, 2), (11, 2), (11, 2)], maxlen=3), 'u_7': deque([(6, 10), (6, 9), (6, 9)], maxlen=3)}
178 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 11), (3, 11), (3, 11)], maxlen=3)}
178 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 7), (9, 7), (9, 7)], maxlen=3), 'u_6': deque([(11, 2), (11, 2), (11, 2)], maxlen=3), 'u_7': deque([(6, 9), (6, 9), (6, 9)], maxlen=3)}
178: Looks like a stuck worker u_4 - deque([(3, 11), (3, 11), (3, 11)], maxlen=3)

178: Looks like a stuck worker u_5 - deque([(9, 7), (9, 7), (9, 7)], maxlen=3)

178: Looks like a stuck worker u_6 - deque([(11, 2), (11, 2), (11, 2)], maxlen=3)

178: Looks like a stuck worker u_7 - deque([(6, 9), (6, 9), (6, 9)], maxlen=3)

179 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 11), (3, 11), (2, 11)], maxlen=3)}
179 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 7), (9, 7), (9, 8)], maxlen=3), 'u_6': deque([(11, 2), (11, 2), (11, 3)], maxlen=3), 'u_7': deque([(6, 9), (6, 9), (7, 9)], maxlen=3)}
180 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 11), (2, 11), (2, 11)], maxlen=3)}
180 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 7), (9, 8), (9, 8)], maxlen=3), 'u_6': deque([(11, 2), (11, 3), (11, 3)], maxlen=3), 'u_7': deque([(6, 9), (7, 9), (7, 9)], maxlen=3)}
181 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 8), (9, 8), (9, 8)], maxlen=3), 'u_6': deque([(11, 3), (11, 3), (11, 3)], maxlen=3), 'u_7': deque([(7, 9), (7, 9), (7, 9)], maxlen=3)}
181 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 11), (2, 11), (2, 11)], maxlen=3)}
181: Looks like a stuck worker u_5 - deque([(9, 8), (9, 8), (9, 8)], maxlen=3)

181: Looks like a stuck worker u_4 - deque([(2, 11), (2, 11), (2, 11)], maxlen=3)

181: Looks like a stuck worker u_6 - deque([(11, 3), (11, 3), (11, 3)], maxlen=3)

181: Looks like a stuck worker u_7 - deque([(7, 9), (7, 9), (7, 9)], maxlen=3)

182 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 11), (2, 11), (2, 10)], maxlen=3)}
182 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 8), (9, 8), (8, 8)], maxlen=3), 'u_6': deque([(11, 3), (11, 3), (11, 2)], maxlen=3), 'u_7': deque([(7, 9), (7, 9), (7, 8)], maxlen=3)}
183 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 11), (2, 10), (2, 10)], maxlen=3)}
183 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 8), (8, 8), (8, 8)], maxlen=3), 'u_6': deque([(11, 3), (11, 2), (11, 2)], maxlen=3), 'u_7': deque([(7, 9), (7, 8), (7, 8)], maxlen=3)}
184 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 10), (2, 10), (2, 10)], maxlen=3)}
184 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 8), (8, 8), (8, 8)], maxlen=3), 'u_6': deque([(11, 2), (11, 2), (11, 2)], maxlen=3), 'u_7': deque([(7, 8), (7, 8), (7, 8)], maxlen=3)}
184: Looks like a stuck worker u_4 - deque([(2, 10), (2, 10), (2, 10)], maxlen=3)

184: Looks like a stuck worker u_5 - deque([(8, 8), (8, 8), (8, 8)], maxlen=3)

184: Looks like a stuck worker u_6 - deque([(11, 2), (11, 2), (11, 2)], maxlen=3)

184: Looks like a stuck worker u_7 - deque([(7, 8), (7, 8), (7, 8)], maxlen=3)

185 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 10), (2, 10), (3, 10)], maxlen=3)}
185 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 8), (8, 8), (9, 8)], maxlen=3), 'u_6': deque([(11, 2), (11, 2), (11, 1)], maxlen=3), 'u_7': deque([(7, 8), (7, 8), (8, 8)], maxlen=3)}
186 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 10), (3, 10), (3, 10)], maxlen=3)}
186 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 8), (9, 8), (9, 8)], maxlen=3), 'u_6': deque([(11, 2), (11, 1), (11, 1)], maxlen=3), 'u_7': deque([(7, 8), (8, 8), (8, 8)], maxlen=3)}
187 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 10), (3, 10)], maxlen=3)}
187 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 8), (9, 8), (9, 8)], maxlen=3), 'u_6': deque([(11, 1), (11, 1), (11, 1)], maxlen=3), 'u_7': deque([(8, 8), (8, 8), (8, 8)], maxlen=3)}
187: Looks like a stuck worker u_4 - deque([(3, 10), (3, 10), (3, 10)], maxlen=3)

187: Looks like a stuck worker u_5 - deque([(9, 8), (9, 8), (9, 8)], maxlen=3)

187: Looks like a stuck worker u_6 - deque([(11, 1), (11, 1), (11, 1)], maxlen=3)

187: Looks like a stuck worker u_7 - deque([(8, 8), (8, 8), (8, 8)], maxlen=3)

188 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 10), (3, 11)], maxlen=3)}
188 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 8), (9, 8), (9, 7)], maxlen=3), 'u_6': deque([(11, 1), (11, 1), (11, 0)], maxlen=3), 'u_7': deque([(8, 8), (8, 8), (8, 9)], maxlen=3)}
189 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 11), (3, 11)], maxlen=3)}
189 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 8), (9, 7), (9, 7)], maxlen=3), 'u_6': deque([(11, 1), (11, 0), (11, 0)], maxlen=3), 'u_7': deque([(8, 8), (8, 9), (8, 9)], maxlen=3)}
190 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 11), (3, 11), (3, 11)], maxlen=3)}
190 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 7), (9, 7), (9, 7)], maxlen=3), 'u_6': deque([(11, 0), (11, 0), (11, 0)], maxlen=3), 'u_7': deque([(8, 9), (8, 9), (8, 9)], maxlen=3)}
190: Looks like a stuck worker u_4 - deque([(3, 11), (3, 11), (3, 11)], maxlen=3)

190: Looks like a stuck worker u_5 - deque([(9, 7), (9, 7), (9, 7)], maxlen=3)

190: Looks like a stuck worker u_6 - deque([(11, 0), (11, 0), (11, 0)], maxlen=3)

190: Looks like a stuck worker u_7 - deque([(8, 9), (8, 9), (8, 9)], maxlen=3)

191 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 11), (3, 11), (3, 11)], maxlen=3)}
191 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 7), (9, 7), (8, 7)], maxlen=3), 'u_6': deque([(11, 0), (11, 0), (10, 0)], maxlen=3), 'u_7': deque([(8, 9), (8, 9), (8, 8)], maxlen=3)}
191: Looks like a stuck worker u_4 - deque([(3, 11), (3, 11), (3, 11)], maxlen=3)

192 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 11), (3, 11), (2, 11)], maxlen=3)}
192 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 7), (8, 7), (8, 7)], maxlen=3), 'u_6': deque([(11, 0), (10, 0), (10, 0)], maxlen=3), 'u_7': deque([(8, 9), (8, 8), (8, 8)], maxlen=3)}
193 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 11), (2, 11), (2, 11)], maxlen=3)}
193 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 7), (8, 7), (8, 7)], maxlen=3), 'u_6': deque([(10, 0), (10, 0), (10, 0)], maxlen=3), 'u_7': deque([(8, 8), (8, 8), (8, 8)], maxlen=3)}
194 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 7), (8, 7), (8, 7)], maxlen=3), 'u_6': deque([(10, 0), (10, 0), (10, 0)], maxlen=3), 'u_7': deque([(8, 8), (8, 8), (8, 8)], maxlen=3)}
194 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 11), (2, 11), (2, 11)], maxlen=3)}
194: Looks like a stuck worker u_5 - deque([(8, 7), (8, 7), (8, 7)], maxlen=3)

194: Looks like a stuck worker u_6 - deque([(10, 0), (10, 0), (10, 0)], maxlen=3)

194: Looks like a stuck worker u_7 - deque([(8, 8), (8, 8), (8, 8)], maxlen=3)

195 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 7), (8, 7), (7, 7)], maxlen=3), 'u_6': deque([(10, 0), (10, 0), (10, 1)], maxlen=3), 'u_7': deque([(8, 8), (8, 8), (8, 7)], maxlen=3)}
195 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 11), (2, 11), (2, 11)], maxlen=3)}
195: Looks like a stuck worker u_4 - deque([(2, 11), (2, 11), (2, 11)], maxlen=3)

196 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 11), (2, 11), (3, 11)], maxlen=3)}
196 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 7), (7, 7), (7, 7)], maxlen=3), 'u_6': deque([(10, 0), (10, 1), (10, 1)], maxlen=3), 'u_7': deque([(8, 8), (8, 7), (8, 7)], maxlen=3)}
197 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 11), (3, 11), (3, 11)], maxlen=3)}
197 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 7), (7, 7), (7, 7)], maxlen=3), 'u_6': deque([(10, 1), (10, 1), (10, 1)], maxlen=3), 'u_7': deque([(8, 7), (8, 7), (8, 7)], maxlen=3)}
198 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 7), (7, 7), (7, 7)], maxlen=3), 'u_6': deque([(10, 1), (10, 1), (10, 1)], maxlen=3), 'u_7': deque([(8, 7), (8, 7), (8, 7)], maxlen=3)}
198 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 11), (3, 11), (3, 11)], maxlen=3)}
198: Looks like a stuck worker u_5 - deque([(7, 7), (7, 7), (7, 7)], maxlen=3)

198: Looks like a stuck worker u_6 - deque([(10, 1), (10, 1), (10, 1)], maxlen=3)

198: Looks like a stuck worker u_7 - deque([(8, 7), (8, 7), (8, 7)], maxlen=3)

199 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 11), (3, 11), (3, 11)], maxlen=3)}
199 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 7), (7, 7), (7, 8)], maxlen=3), 'u_6': deque([(10, 1), (10, 1), (9, 1)], maxlen=3), 'u_7': deque([(8, 7), (8, 7), (7, 7)], maxlen=3)}
199: Looks like a stuck worker u_4 - deque([(3, 11), (3, 11), (3, 11)], maxlen=3)

200 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 11), (3, 11), (2, 11)], maxlen=3)}
200 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 7), (7, 8), (7, 8)], maxlen=3), 'u_6': deque([(10, 1), (9, 1), (9, 1)], maxlen=3), 'u_7': deque([(8, 7), (7, 7), (7, 7)], maxlen=3)}
200: ### Found a hight density position:[0, 3] ###

200: ### Found a hight density position:[0, 3] ###

200 Defining Max Density area
200 Defining Max Density area
200: ### Found a hight density position:[0, 3] ###

200 Defining Max Density area
200: ### Found a hight density position:[0, 3] ###

200 Defining Max Density area
201 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 11), (2, 11), (2, 11)], maxlen=3)}
201 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 8), (7, 8), (7, 8)], maxlen=3), 'u_6': deque([(9, 1), (9, 1), (9, 1)], maxlen=3), 'u_7': deque([(7, 7), (7, 7), (7, 7)], maxlen=3)}
202 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 11), (2, 11), (2, 11)], maxlen=3)}
202 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 8), (7, 8), (7, 8)], maxlen=3), 'u_6': deque([(9, 1), (9, 1), (9, 1)], maxlen=3), 'u_7': deque([(7, 7), (7, 7), (7, 7)], maxlen=3)}
202: Looks like a stuck worker u_5 - deque([(7, 8), (7, 8), (7, 8)], maxlen=3)

202: Looks like a stuck worker u_6 - deque([(9, 1), (9, 1), (9, 1)], maxlen=3)

202: Looks like a stuck worker u_7 - deque([(7, 7), (7, 7), (7, 7)], maxlen=3)

203 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 11), (2, 11), (2, 11)], maxlen=3)}
203 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 8), (7, 8), (6, 8)], maxlen=3), 'u_6': deque([(9, 1), (9, 1), (9, 2)], maxlen=3), 'u_7': deque([(7, 7), (7, 7), (8, 7)], maxlen=3)}
203: Looks like a stuck worker u_4 - deque([(2, 11), (2, 11), (2, 11)], maxlen=3)

204 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 11), (2, 11), (1, 11)], maxlen=3)}
204 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 8), (6, 8), (6, 8)], maxlen=3), 'u_6': deque([(9, 1), (9, 2), (9, 2)], maxlen=3), 'u_7': deque([(7, 7), (8, 7), (8, 7)], maxlen=3)}
205 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 11), (1, 11), (1, 11)], maxlen=3)}
205 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(6, 8), (6, 8), (7, 8)], maxlen=3), 'u_6': deque([(9, 2), (9, 2), (9, 3)], maxlen=3), 'u_7': deque([(8, 7), (8, 7), (8, 8)], maxlen=3)}
206 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(6, 8), (7, 8), (7, 8)], maxlen=3), 'u_6': deque([(9, 2), (9, 3), (9, 3)], maxlen=3), 'u_7': deque([(8, 7), (8, 8), (8, 8)], maxlen=3)}
206 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(1, 11), (1, 11), (1, 11)], maxlen=3)}
206: Looks like a stuck worker u_4 - deque([(1, 11), (1, 11), (1, 11)], maxlen=3)

207 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(1, 11), (1, 11), (2, 11)], maxlen=3)}
207 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 8), (7, 8), (7, 8)], maxlen=3), 'u_6': deque([(9, 3), (9, 3), (9, 3)], maxlen=3), 'u_7': deque([(8, 8), (8, 8), (8, 8)], maxlen=3)}
207: Looks like a stuck worker u_5 - deque([(7, 8), (7, 8), (7, 8)], maxlen=3)

207: Looks like a stuck worker u_6 - deque([(9, 3), (9, 3), (9, 3)], maxlen=3)

207: Looks like a stuck worker u_7 - deque([(8, 8), (8, 8), (8, 8)], maxlen=3)

208 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(1, 11), (2, 11), (2, 11)], maxlen=3)}
208 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 8), (7, 8), (7, 9)], maxlen=3), 'u_6': deque([(9, 3), (9, 3), (8, 3)], maxlen=3), 'u_7': deque([(8, 8), (8, 8), (8, 9)], maxlen=3)}
209 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 11), (2, 11), (2, 11)], maxlen=3)}
209 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 8), (7, 9), (7, 9)], maxlen=3), 'u_6': deque([(9, 3), (8, 3), (8, 3)], maxlen=3), 'u_7': deque([(8, 8), (8, 9), (8, 9)], maxlen=3)}
209: Looks like a stuck worker u_4 - deque([(2, 11), (2, 11), (2, 11)], maxlen=3)

210 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 11), (2, 11), (2, 10)], maxlen=3)}
210 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 9), (7, 9), (7, 9)], maxlen=3), 'u_6': deque([(8, 3), (8, 3), (8, 3)], maxlen=3), 'u_7': deque([(8, 9), (8, 9), (8, 9)], maxlen=3)}
210: Looks like a stuck worker u_5 - deque([(7, 9), (7, 9), (7, 9)], maxlen=3)

210: Looks like a stuck worker u_6 - deque([(8, 3), (8, 3), (8, 3)], maxlen=3)

210: Looks like a stuck worker u_7 - deque([(8, 9), (8, 9), (8, 9)], maxlen=3)

211 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 11), (2, 10), (2, 10)], maxlen=3)}
211 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 9), (7, 9), (7, 10)], maxlen=3), 'u_6': deque([(8, 3), (8, 3), (7, 3)], maxlen=3), 'u_7': deque([(8, 9), (8, 9), (8, 10)], maxlen=3)}
212 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 9), (7, 10), (7, 10)], maxlen=3), 'u_6': deque([(8, 3), (7, 3), (7, 3)], maxlen=3), 'u_7': deque([(8, 9), (8, 10), (8, 10)], maxlen=3)}
212 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 10), (2, 10), (2, 10)], maxlen=3)}
212: Looks like a stuck worker u_4 - deque([(2, 10), (2, 10), (2, 10)], maxlen=3)

213 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 10), (2, 10), (1, 10)], maxlen=3)}
213 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 10), (7, 10), (7, 10)], maxlen=3), 'u_6': deque([(7, 3), (7, 3), (7, 3)], maxlen=3), 'u_7': deque([(8, 10), (8, 10), (8, 10)], maxlen=3)}
213: Looks like a stuck worker u_5 - deque([(7, 10), (7, 10), (7, 10)], maxlen=3)

213: Looks like a stuck worker u_6 - deque([(7, 3), (7, 3), (7, 3)], maxlen=3)

213: Looks like a stuck worker u_7 - deque([(8, 10), (8, 10), (8, 10)], maxlen=3)

214 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 10), (1, 10), (1, 10)], maxlen=3)}
214 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 10), (7, 10), (8, 10)], maxlen=3), 'u_6': deque([(7, 3), (7, 3), (6, 3)], maxlen=3), 'u_7': deque([(8, 10), (8, 10), (9, 10)], maxlen=3)}
215 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(1, 10), (1, 10), (1, 10)], maxlen=3)}
215 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 10), (8, 10), (8, 10)], maxlen=3), 'u_6': deque([(7, 3), (6, 3), (6, 3)], maxlen=3), 'u_7': deque([(8, 10), (9, 10), (9, 10)], maxlen=3)}
215: Looks like a stuck worker u_4 - deque([(1, 10), (1, 10), (1, 10)], maxlen=3)

216 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 10), (8, 10), (8, 10)], maxlen=3), 'u_6': deque([(6, 3), (6, 3), (6, 3)], maxlen=3), 'u_7': deque([(9, 10), (9, 10), (9, 10)], maxlen=3)}
216 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(1, 10), (1, 10), (1, 9)], maxlen=3)}
216: Looks like a stuck worker u_5 - deque([(8, 10), (8, 10), (8, 10)], maxlen=3)

216: Looks like a stuck worker u_6 - deque([(6, 3), (6, 3), (6, 3)], maxlen=3)

216: Looks like a stuck worker u_7 - deque([(9, 10), (9, 10), (9, 10)], maxlen=3)

217 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(1, 10), (1, 9), (1, 9)], maxlen=3)}
217 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 10), (8, 10), (7, 10)], maxlen=3), 'u_6': deque([(6, 3), (6, 3), (6, 2)], maxlen=3), 'u_7': deque([(9, 10), (9, 10), (8, 10)], maxlen=3)}
218 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 10), (7, 10), (7, 10)], maxlen=3), 'u_6': deque([(6, 3), (6, 2), (6, 2)], maxlen=3), 'u_7': deque([(9, 10), (8, 10), (8, 10)], maxlen=3)}
218 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(1, 9), (1, 9), (1, 9)], maxlen=3)}
218: Looks like a stuck worker u_4 - deque([(1, 9), (1, 9), (1, 9)], maxlen=3)

219 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(1, 9), (1, 9), (2, 9)], maxlen=3)}
219 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 10), (7, 10), (7, 10)], maxlen=3), 'u_6': deque([(6, 2), (6, 2), (6, 2)], maxlen=3), 'u_7': deque([(8, 10), (8, 10), (8, 10)], maxlen=3)}
219: Looks like a stuck worker u_5 - deque([(7, 10), (7, 10), (7, 10)], maxlen=3)

219: Looks like a stuck worker u_6 - deque([(6, 2), (6, 2), (6, 2)], maxlen=3)

219: Looks like a stuck worker u_7 - deque([(8, 10), (8, 10), (8, 10)], maxlen=3)

220 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(1, 9), (2, 9), (2, 9)], maxlen=3)}
220 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 10), (7, 10), (7, 11)], maxlen=3), 'u_6': deque([(6, 2), (6, 2), (7, 2)], maxlen=3), 'u_7': deque([(8, 10), (8, 10), (7, 10)], maxlen=3)}
221 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 9), (2, 9), (2, 9)], maxlen=3)}
221 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 10), (7, 11), (7, 11)], maxlen=3), 'u_6': deque([(6, 2), (7, 2), (7, 2)], maxlen=3), 'u_7': deque([(8, 10), (7, 10), (7, 10)], maxlen=3)}
221: Looks like a stuck worker u_4 - deque([(2, 9), (2, 9), (2, 9)], maxlen=3)

222 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 11), (7, 11), (7, 11)], maxlen=3), 'u_6': deque([(7, 2), (7, 2), (7, 2)], maxlen=3), 'u_7': deque([(7, 10), (7, 10), (7, 10)], maxlen=3)}
222 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 9), (2, 9), (1, 9)], maxlen=3)}
222: Looks like a stuck worker u_5 - deque([(7, 11), (7, 11), (7, 11)], maxlen=3)

222: Looks like a stuck worker u_6 - deque([(7, 2), (7, 2), (7, 2)], maxlen=3)

222: Looks like a stuck worker u_7 - deque([(7, 10), (7, 10), (7, 10)], maxlen=3)

223 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 9), (1, 9), (1, 9)], maxlen=3)}
223 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 11), (7, 11), (6, 11)], maxlen=3), 'u_6': deque([(7, 2), (7, 2), (8, 2)], maxlen=3), 'u_7': deque([(7, 10), (7, 10), (7, 11)], maxlen=3)}
224 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(1, 9), (1, 9), (1, 9)], maxlen=3)}
224 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 11), (6, 11), (6, 11)], maxlen=3), 'u_6': deque([(7, 2), (8, 2), (8, 2)], maxlen=3), 'u_7': deque([(7, 10), (7, 11), (7, 11)], maxlen=3)}
224: Looks like a stuck worker u_4 - deque([(1, 9), (1, 9), (1, 9)], maxlen=3)

225 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(1, 9), (1, 9), (2, 9)], maxlen=3)}
225 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(6, 11), (6, 11), (6, 11)], maxlen=3), 'u_6': deque([(8, 2), (8, 2), (8, 2)], maxlen=3), 'u_7': deque([(7, 11), (7, 11), (7, 11)], maxlen=3)}
225: Looks like a stuck worker u_5 - deque([(6, 11), (6, 11), (6, 11)], maxlen=3)

225: Looks like a stuck worker u_6 - deque([(8, 2), (8, 2), (8, 2)], maxlen=3)

225: Looks like a stuck worker u_7 - deque([(7, 11), (7, 11), (7, 11)], maxlen=3)

226 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(1, 9), (2, 9), (2, 9)], maxlen=3)}
226 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(6, 11), (6, 11), (7, 11)], maxlen=3), 'u_6': deque([(8, 2), (8, 2), (9, 2)], maxlen=3), 'u_7': deque([(7, 11), (7, 11), (8, 11)], maxlen=3)}
227 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 9), (2, 9), (2, 9)], maxlen=3)}
227 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(6, 11), (7, 11), (7, 11)], maxlen=3), 'u_6': deque([(8, 2), (9, 2), (9, 2)], maxlen=3), 'u_7': deque([(7, 11), (8, 11), (8, 11)], maxlen=3)}
227: Looks like a stuck worker u_4 - deque([(2, 9), (2, 9), (2, 9)], maxlen=3)

228 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 9), (2, 9), (2, 10)], maxlen=3)}
228 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 11), (7, 11), (7, 11)], maxlen=3), 'u_6': deque([(9, 2), (9, 2), (9, 2)], maxlen=3), 'u_7': deque([(8, 11), (8, 11), (8, 11)], maxlen=3)}
228: Looks like a stuck worker u_5 - deque([(7, 11), (7, 11), (7, 11)], maxlen=3)

228: Looks like a stuck worker u_6 - deque([(9, 2), (9, 2), (9, 2)], maxlen=3)

228: Looks like a stuck worker u_7 - deque([(8, 11), (8, 11), (8, 11)], maxlen=3)

229 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 9), (2, 10), (2, 10)], maxlen=3)}
229 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 11), (7, 11), (7, 11)], maxlen=3), 'u_6': deque([(9, 2), (9, 2), (8, 2)], maxlen=3), 'u_7': deque([(8, 11), (8, 11), (8, 11)], maxlen=3)}
229: Looks like a stuck worker u_5 - deque([(7, 11), (7, 11), (7, 11)], maxlen=3)

229: Looks like a stuck worker u_7 - deque([(8, 11), (8, 11), (8, 11)], maxlen=3)

230 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 10), (2, 10), (2, 10)], maxlen=3)}
230 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 11), (7, 11), (8, 11)], maxlen=3), 'u_6': deque([(9, 2), (8, 2), (8, 2)], maxlen=3), 'u_7': deque([(8, 11), (8, 11), (7, 11)], maxlen=3)}
230: Looks like a stuck worker u_4 - deque([(2, 10), (2, 10), (2, 10)], maxlen=3)

231 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 10), (2, 10), (2, 9)], maxlen=3)}
231 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 11), (8, 11), (8, 11)], maxlen=3), 'u_6': deque([(8, 2), (8, 2), (8, 2)], maxlen=3), 'u_7': deque([(8, 11), (7, 11), (7, 11)], maxlen=3)}
231: Looks like a stuck worker u_6 - deque([(8, 2), (8, 2), (8, 2)], maxlen=3)

232 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 10), (2, 9), (2, 9)], maxlen=3)}
232 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 11), (8, 11), (8, 10)], maxlen=3), 'u_6': deque([(8, 2), (8, 2), (7, 2)], maxlen=3), 'u_7': deque([(7, 11), (7, 11), (7, 10)], maxlen=3)}
233 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 9), (2, 9), (2, 9)], maxlen=3)}
233 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 11), (8, 10), (8, 10)], maxlen=3), 'u_6': deque([(8, 2), (7, 2), (7, 2)], maxlen=3), 'u_7': deque([(7, 11), (7, 10), (7, 10)], maxlen=3)}
234 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 9), (2, 9), (2, 9)], maxlen=3)}
234 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 10), (8, 10), (8, 10)], maxlen=3), 'u_6': deque([(7, 2), (7, 2), (7, 2)], maxlen=3), 'u_7': deque([(7, 10), (7, 10), (7, 10)], maxlen=3)}
234: Looks like a stuck worker u_4 - deque([(2, 9), (2, 9), (2, 9)], maxlen=3)

235 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 9), (2, 9), (1, 9)], maxlen=3)}
235 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 10), (8, 10), (8, 10)], maxlen=3), 'u_6': deque([(7, 2), (7, 2), (7, 2)], maxlen=3), 'u_7': deque([(7, 10), (7, 10), (7, 10)], maxlen=3)}
235: Looks like a stuck worker u_5 - deque([(8, 10), (8, 10), (8, 10)], maxlen=3)

235: Looks like a stuck worker u_6 - deque([(7, 2), (7, 2), (7, 2)], maxlen=3)

235: Looks like a stuck worker u_7 - deque([(7, 10), (7, 10), (7, 10)], maxlen=3)

236 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 9), (1, 9), (1, 9)], maxlen=3)}
236 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 10), (8, 10), (7, 10)], maxlen=3), 'u_6': deque([(7, 2), (7, 2), (8, 2)], maxlen=3), 'u_7': deque([(7, 10), (7, 10), (8, 10)], maxlen=3)}
237 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(1, 9), (1, 9), (1, 9)], maxlen=3)}
237 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 10), (7, 10), (7, 10)], maxlen=3), 'u_6': deque([(7, 2), (8, 2), (8, 2)], maxlen=3), 'u_7': deque([(7, 10), (8, 10), (8, 10)], maxlen=3)}
238 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(1, 9), (1, 9), (1, 9)], maxlen=3)}
238 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 10), (7, 10), (7, 10)], maxlen=3), 'u_6': deque([(8, 2), (8, 2), (8, 2)], maxlen=3), 'u_7': deque([(8, 10), (8, 10), (8, 10)], maxlen=3)}
238: Looks like a stuck worker u_4 - deque([(1, 9), (1, 9), (1, 9)], maxlen=3)

239 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(1, 9), (1, 9), (0, 9)], maxlen=3)}
239 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 10), (7, 10), (7, 10)], maxlen=3), 'u_6': deque([(8, 2), (8, 2), (8, 2)], maxlen=3), 'u_7': deque([(8, 10), (8, 10), (8, 10)], maxlen=3)}
239: Looks like a stuck worker u_5 - deque([(7, 10), (7, 10), (7, 10)], maxlen=3)

239: Looks like a stuck worker u_6 - deque([(8, 2), (8, 2), (8, 2)], maxlen=3)

239: Looks like a stuck worker u_7 - deque([(8, 10), (8, 10), (8, 10)], maxlen=3)

240 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(1, 9), (0, 9), (0, 9)], maxlen=3)}
240 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 10), (7, 10), (7, 9)], maxlen=3), 'u_6': deque([(8, 2), (8, 2), (8, 3)], maxlen=3), 'u_7': deque([(8, 10), (8, 10), (7, 10)], maxlen=3)}
241 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(0, 9), (0, 9), (0, 9)], maxlen=3)}
241 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 10), (7, 9), (7, 9)], maxlen=3), 'u_6': deque([(8, 2), (8, 3), (8, 3)], maxlen=3), 'u_7': deque([(8, 10), (7, 10), (7, 10)], maxlen=3)}
242 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(0, 9), (0, 9), (0, 9)], maxlen=3)}
242 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 9), (7, 9), (7, 9)], maxlen=3), 'u_6': deque([(8, 3), (8, 3), (8, 3)], maxlen=3), 'u_7': deque([(7, 10), (7, 10), (7, 10)], maxlen=3)}
242: Looks like a stuck worker u_4 - deque([(0, 9), (0, 9), (0, 9)], maxlen=3)

243 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(0, 9), (0, 9), (0, 9)], maxlen=3)}
243 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 9), (7, 9), (7, 9)], maxlen=3), 'u_6': deque([(8, 3), (8, 3), (8, 3)], maxlen=3), 'u_7': deque([(7, 10), (7, 10), (7, 10)], maxlen=3)}
243: Looks like a stuck worker u_5 - deque([(7, 9), (7, 9), (7, 9)], maxlen=3)

243: Looks like a stuck worker u_4 - deque([(0, 9), (0, 9), (0, 9)], maxlen=3)

243: Looks like a stuck worker u_6 - deque([(8, 3), (8, 3), (8, 3)], maxlen=3)

243: Looks like a stuck worker u_7 - deque([(7, 10), (7, 10), (7, 10)], maxlen=3)

244 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(0, 9), (0, 9), (0, 10)], maxlen=3)}
244 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 9), (7, 9), (6, 9)], maxlen=3), 'u_6': deque([(8, 3), (8, 3), (8, 4)], maxlen=3), 'u_7': deque([(7, 10), (7, 10), (7, 11)], maxlen=3)}
245 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(0, 9), (0, 10), (0, 10)], maxlen=3)}
245 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 9), (6, 9), (6, 9)], maxlen=3), 'u_6': deque([(8, 3), (8, 4), (8, 4)], maxlen=3), 'u_7': deque([(7, 10), (7, 11), (7, 11)], maxlen=3)}
246 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(0, 10), (0, 10), (0, 9)], maxlen=3)}
246 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(6, 9), (6, 9), (6, 9)], maxlen=3), 'u_6': deque([(8, 4), (8, 4), (8, 4)], maxlen=3), 'u_7': deque([(7, 11), (7, 11), (7, 10)], maxlen=3)}
246: Looks like a stuck worker u_5 - deque([(6, 9), (6, 9), (6, 9)], maxlen=3)

246: Looks like a stuck worker u_6 - deque([(8, 4), (8, 4), (8, 4)], maxlen=3)

247 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(0, 10), (0, 9), (0, 9)], maxlen=3)}
247 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(6, 9), (6, 9), (7, 9)], maxlen=3), 'u_6': deque([(8, 4), (8, 4), (8, 3)], maxlen=3), 'u_7': deque([(7, 11), (7, 10), (7, 10)], maxlen=3)}
248 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(0, 9), (0, 9), (1, 9)], maxlen=3)}
248 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(6, 9), (7, 9), (7, 9)], maxlen=3), 'u_6': deque([(8, 4), (8, 3), (8, 3)], maxlen=3), 'u_7': deque([(7, 10), (7, 10), (7, 10)], maxlen=3)}
248: Looks like a stuck worker u_7 - deque([(7, 10), (7, 10), (7, 10)], maxlen=3)

249 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(0, 9), (1, 9), (1, 9)], maxlen=3)}
249 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 9), (7, 9), (7, 9)], maxlen=3), 'u_6': deque([(8, 3), (8, 3), (8, 3)], maxlen=3), 'u_7': deque([(7, 10), (7, 10), (8, 10)], maxlen=3)}
249: Looks like a stuck worker u_5 - deque([(7, 9), (7, 9), (7, 9)], maxlen=3)

249: Looks like a stuck worker u_6 - deque([(8, 3), (8, 3), (8, 3)], maxlen=3)

250 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(1, 9), (1, 9), (1, 9)], maxlen=3)}
250 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 9), (7, 9), (6, 9)], maxlen=3), 'u_6': deque([(8, 3), (8, 3), (8, 2)], maxlen=3), 'u_7': deque([(7, 10), (8, 10), (8, 10)], maxlen=3)}
250: Looks like a stuck worker u_4 - deque([(1, 9), (1, 9), (1, 9)], maxlen=3)

251 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(1, 9), (1, 9), (2, 9)], maxlen=3)}
251 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 9), (6, 9), (6, 9)], maxlen=3), 'u_6': deque([(8, 3), (8, 2), (8, 2)], maxlen=3), 'u_7': deque([(8, 10), (8, 10), (8, 10)], maxlen=3)}
251: Looks like a stuck worker u_7 - deque([(8, 10), (8, 10), (8, 10)], maxlen=3)

252 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(1, 9), (2, 9), (2, 9)], maxlen=3)}
252 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(6, 9), (6, 9), (6, 9)], maxlen=3), 'u_6': deque([(8, 2), (8, 2), (8, 2)], maxlen=3), 'u_7': deque([(8, 10), (8, 10), (8, 9)], maxlen=3)}
252: Looks like a stuck worker u_5 - deque([(6, 9), (6, 9), (6, 9)], maxlen=3)

252: Looks like a stuck worker u_6 - deque([(8, 2), (8, 2), (8, 2)], maxlen=3)

253 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 9), (2, 9), (2, 9)], maxlen=3)}
253 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(6, 9), (6, 9), (7, 9)], maxlen=3), 'u_6': deque([(8, 2), (8, 2), (9, 2)], maxlen=3), 'u_7': deque([(8, 10), (8, 9), (8, 9)], maxlen=3)}
253: Looks like a stuck worker u_4 - deque([(2, 9), (2, 9), (2, 9)], maxlen=3)

254 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 9), (2, 9), (1, 9)], maxlen=3)}
254 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(6, 9), (7, 9), (7, 9)], maxlen=3), 'u_6': deque([(8, 2), (9, 2), (9, 2)], maxlen=3), 'u_7': deque([(8, 9), (8, 9), (8, 9)], maxlen=3)}
254: Looks like a stuck worker u_7 - deque([(8, 9), (8, 9), (8, 9)], maxlen=3)

255 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 9), (1, 9), (1, 9)], maxlen=3)}
255 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 9), (7, 9), (7, 9)], maxlen=3), 'u_6': deque([(9, 2), (9, 2), (9, 2)], maxlen=3), 'u_7': deque([(8, 9), (8, 9), (8, 9)], maxlen=3)}
255: Looks like a stuck worker u_5 - deque([(7, 9), (7, 9), (7, 9)], maxlen=3)

255: Looks like a stuck worker u_6 - deque([(9, 2), (9, 2), (9, 2)], maxlen=3)

255: Looks like a stuck worker u_7 - deque([(8, 9), (8, 9), (8, 9)], maxlen=3)

256 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(1, 9), (1, 9), (1, 9)], maxlen=3)}
256 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 9), (7, 9), (7, 8)], maxlen=3), 'u_6': deque([(9, 2), (9, 2), (8, 2)], maxlen=3), 'u_7': deque([(8, 9), (8, 9), (7, 9)], maxlen=3)}
256: Looks like a stuck worker u_4 - deque([(1, 9), (1, 9), (1, 9)], maxlen=3)

257 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(1, 9), (1, 9), (2, 9)], maxlen=3)}
257 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 9), (7, 8), (7, 8)], maxlen=3), 'u_6': deque([(9, 2), (8, 2), (8, 2)], maxlen=3), 'u_7': deque([(8, 9), (7, 9), (7, 9)], maxlen=3)}
258 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(1, 9), (2, 9), (2, 9)], maxlen=3)}
258 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 8), (7, 8), (7, 8)], maxlen=3), 'u_6': deque([(8, 2), (8, 2), (8, 2)], maxlen=3), 'u_7': deque([(7, 9), (7, 9), (7, 9)], maxlen=3)}
258: Looks like a stuck worker u_5 - deque([(7, 8), (7, 8), (7, 8)], maxlen=3)

258: Looks like a stuck worker u_6 - deque([(8, 2), (8, 2), (8, 2)], maxlen=3)

258: Looks like a stuck worker u_7 - deque([(7, 9), (7, 9), (7, 9)], maxlen=3)

259 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 9), (2, 9), (2, 9)], maxlen=3)}
259 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 8), (7, 8), (8, 8)], maxlen=3), 'u_6': deque([(8, 2), (8, 2), (8, 1)], maxlen=3), 'u_7': deque([(7, 9), (7, 9), (7, 8)], maxlen=3)}
259: Looks like a stuck worker u_4 - deque([(2, 9), (2, 9), (2, 9)], maxlen=3)

260 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 9), (2, 9), (3, 9)], maxlen=3)}
260 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 8), (8, 8), (8, 8)], maxlen=3), 'u_6': deque([(8, 2), (8, 1), (8, 1)], maxlen=3), 'u_7': deque([(7, 9), (7, 8), (7, 8)], maxlen=3)}
261 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 9), (3, 9), (3, 9)], maxlen=3)}
261 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 8), (8, 8), (8, 8)], maxlen=3), 'u_6': deque([(8, 1), (8, 1), (8, 1)], maxlen=3), 'u_7': deque([(7, 8), (7, 8), (7, 8)], maxlen=3)}
261: Looks like a stuck worker u_5 - deque([(8, 8), (8, 8), (8, 8)], maxlen=3)

261: Looks like a stuck worker u_6 - deque([(8, 1), (8, 1), (8, 1)], maxlen=3)

261: Looks like a stuck worker u_7 - deque([(7, 8), (7, 8), (7, 8)], maxlen=3)

262 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 8), (8, 8), (7, 8)], maxlen=3), 'u_6': deque([(8, 1), (8, 1), (8, 2)], maxlen=3), 'u_7': deque([(7, 8), (7, 8), (6, 8)], maxlen=3)}
262 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 9), (3, 9)], maxlen=3)}
262: Looks like a stuck worker u_4 - deque([(3, 9), (3, 9), (3, 9)], maxlen=3)

263 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 9), (3, 10)], maxlen=3)}
263 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 8), (7, 8), (7, 8)], maxlen=3), 'u_6': deque([(8, 1), (8, 2), (8, 2)], maxlen=3), 'u_7': deque([(7, 8), (6, 8), (6, 8)], maxlen=3)}
264 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 10), (3, 10)], maxlen=3)}
264 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 8), (7, 8), (7, 8)], maxlen=3), 'u_6': deque([(8, 2), (8, 2), (8, 2)], maxlen=3), 'u_7': deque([(6, 8), (6, 8), (6, 8)], maxlen=3)}
264: Looks like a stuck worker u_5 - deque([(7, 8), (7, 8), (7, 8)], maxlen=3)

264: Looks like a stuck worker u_6 - deque([(8, 2), (8, 2), (8, 2)], maxlen=3)

264: Looks like a stuck worker u_7 - deque([(6, 8), (6, 8), (6, 8)], maxlen=3)

265 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 10), (3, 10)], maxlen=3)}
265 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 8), (7, 8), (8, 8)], maxlen=3), 'u_6': deque([(8, 2), (8, 2), (8, 1)], maxlen=3), 'u_7': deque([(6, 8), (6, 8), (5, 8)], maxlen=3)}
265: Looks like a stuck worker u_4 - deque([(3, 10), (3, 10), (3, 10)], maxlen=3)

266 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 10), (3, 11)], maxlen=3)}
266 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(7, 8), (8, 8), (8, 8)], maxlen=3), 'u_6': deque([(8, 2), (8, 1), (8, 1)], maxlen=3), 'u_7': deque([(6, 8), (5, 8), (5, 8)], maxlen=3)}
267 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 11), (3, 11)], maxlen=3)}
267 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 8), (8, 8), (8, 8)], maxlen=3), 'u_6': deque([(8, 1), (8, 1), (8, 1)], maxlen=3), 'u_7': deque([(5, 8), (5, 8), (5, 8)], maxlen=3)}
267: Looks like a stuck worker u_5 - deque([(8, 8), (8, 8), (8, 8)], maxlen=3)

267: Looks like a stuck worker u_6 - deque([(8, 1), (8, 1), (8, 1)], maxlen=3)

267: Looks like a stuck worker u_7 - deque([(5, 8), (5, 8), (5, 8)], maxlen=3)

268 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 11), (3, 11), (3, 11)], maxlen=3)}
268 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 8), (8, 8), (9, 8)], maxlen=3), 'u_6': deque([(8, 1), (8, 1), (8, 2)], maxlen=3), 'u_7': deque([(5, 8), (5, 8), (5, 9)], maxlen=3)}
268: Looks like a stuck worker u_4 - deque([(3, 11), (3, 11), (3, 11)], maxlen=3)

269 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 11), (3, 11), (3, 10)], maxlen=3)}
269 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(8, 8), (9, 8), (9, 8)], maxlen=3), 'u_6': deque([(8, 1), (8, 2), (8, 2)], maxlen=3), 'u_7': deque([(5, 8), (5, 9), (5, 9)], maxlen=3)}
270 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 11), (3, 10), (3, 10)], maxlen=3)}
270 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 8), (9, 8), (9, 8)], maxlen=3), 'u_6': deque([(8, 2), (8, 2), (8, 2)], maxlen=3), 'u_7': deque([(5, 9), (5, 9), (5, 9)], maxlen=3)}
270: Looks like a stuck worker u_5 - deque([(9, 8), (9, 8), (9, 8)], maxlen=3)

270: Looks like a stuck worker u_6 - deque([(8, 2), (8, 2), (8, 2)], maxlen=3)

270: Looks like a stuck worker u_7 - deque([(5, 9), (5, 9), (5, 9)], maxlen=3)

271 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 10), (3, 10)], maxlen=3)}
271 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 8), (9, 8), (9, 9)], maxlen=3), 'u_6': deque([(8, 2), (8, 2), (7, 2)], maxlen=3), 'u_7': deque([(5, 9), (5, 9), (4, 9)], maxlen=3)}
271: Looks like a stuck worker u_4 - deque([(3, 10), (3, 10), (3, 10)], maxlen=3)

272 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 10), (3, 9)], maxlen=3)}
272 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 8), (9, 9), (9, 9)], maxlen=3), 'u_6': deque([(8, 2), (7, 2), (7, 2)], maxlen=3), 'u_7': deque([(5, 9), (4, 9), (4, 9)], maxlen=3)}
273 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 9), (3, 9)], maxlen=3)}
273 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 9), (9, 9), (9, 9)], maxlen=3), 'u_6': deque([(7, 2), (7, 2), (7, 2)], maxlen=3), 'u_7': deque([(4, 9), (4, 9), (4, 9)], maxlen=3)}
274 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 9), (3, 9)], maxlen=3)}
274 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 9), (9, 9), (9, 9)], maxlen=3), 'u_6': deque([(7, 2), (7, 2), (7, 2)], maxlen=3), 'u_7': deque([(4, 9), (4, 9), (4, 9)], maxlen=3)}
274: Looks like a stuck worker u_5 - deque([(9, 9), (9, 9), (9, 9)], maxlen=3)

274: Looks like a stuck worker u_6 - deque([(7, 2), (7, 2), (7, 2)], maxlen=3)

274: Looks like a stuck worker u_7 - deque([(4, 9), (4, 9), (4, 9)], maxlen=3)

275 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 9), (3, 9)], maxlen=3)}
275 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 9), (9, 9), (9, 8)], maxlen=3), 'u_6': deque([(7, 2), (7, 2), (8, 2)], maxlen=3), 'u_7': deque([(4, 9), (4, 9), (5, 9)], maxlen=3)}
275: Looks like a stuck worker u_4 - deque([(3, 9), (3, 9), (3, 9)], maxlen=3)

276 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 9), (3, 8)], maxlen=3)}
276 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 9), (9, 8), (9, 8)], maxlen=3), 'u_6': deque([(7, 2), (8, 2), (8, 2)], maxlen=3), 'u_7': deque([(4, 9), (5, 9), (5, 9)], maxlen=3)}
277 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 8), (3, 8)], maxlen=3)}
277 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 8), (9, 8), (9, 8)], maxlen=3), 'u_6': deque([(8, 2), (8, 2), (8, 2)], maxlen=3), 'u_7': deque([(5, 9), (5, 9), (5, 9)], maxlen=3)}
278 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 8), (3, 8), (3, 8)], maxlen=3)}
278 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 8), (9, 8), (9, 8)], maxlen=3), 'u_6': deque([(8, 2), (8, 2), (8, 2)], maxlen=3), 'u_7': deque([(5, 9), (5, 9), (5, 9)], maxlen=3)}
278: Looks like a stuck worker u_5 - deque([(9, 8), (9, 8), (9, 8)], maxlen=3)

278: Looks like a stuck worker u_6 - deque([(8, 2), (8, 2), (8, 2)], maxlen=3)

278: Looks like a stuck worker u_7 - deque([(5, 9), (5, 9), (5, 9)], maxlen=3)

279 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 8), (3, 8), (3, 8)], maxlen=3)}
279 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 8), (9, 8), (9, 9)], maxlen=3), 'u_6': deque([(8, 2), (8, 2), (8, 1)], maxlen=3), 'u_7': deque([(5, 9), (5, 9), (5, 8)], maxlen=3)}
279: Looks like a stuck worker u_4 - deque([(3, 8), (3, 8), (3, 8)], maxlen=3)

280 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 8), (3, 8), (3, 9)], maxlen=3)}
280 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 8), (9, 9), (9, 9)], maxlen=3), 'u_6': deque([(8, 2), (8, 1), (8, 1)], maxlen=3), 'u_7': deque([(5, 9), (5, 8), (5, 8)], maxlen=3)}
281 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 8), (3, 9), (3, 9)], maxlen=3)}
281 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 9), (9, 9), (9, 9)], maxlen=3), 'u_6': deque([(8, 1), (8, 1), (8, 1)], maxlen=3), 'u_7': deque([(5, 8), (5, 8), (5, 8)], maxlen=3)}
282 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 9), (3, 9)], maxlen=3)}
282 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 9), (9, 9), (9, 9)], maxlen=3), 'u_6': deque([(8, 1), (8, 1), (8, 1)], maxlen=3), 'u_7': deque([(5, 8), (5, 8), (5, 8)], maxlen=3)}
282: Looks like a stuck worker u_5 - deque([(9, 9), (9, 9), (9, 9)], maxlen=3)

282: Looks like a stuck worker u_6 - deque([(8, 1), (8, 1), (8, 1)], maxlen=3)

282: Looks like a stuck worker u_7 - deque([(5, 8), (5, 8), (5, 8)], maxlen=3)

283 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 9), (3, 9)], maxlen=3)}
283 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 9), (9, 9), (10, 9)], maxlen=3), 'u_6': deque([(8, 1), (8, 1), (9, 1)], maxlen=3), 'u_7': deque([(5, 8), (5, 8), (4, 8)], maxlen=3)}
283: Looks like a stuck worker u_4 - deque([(3, 9), (3, 9), (3, 9)], maxlen=3)

284 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 9), (3, 10)], maxlen=3)}
284 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 9), (10, 9), (10, 9)], maxlen=3), 'u_6': deque([(8, 1), (9, 1), (9, 1)], maxlen=3), 'u_7': deque([(5, 8), (4, 8), (4, 8)], maxlen=3)}
285 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 10), (3, 10)], maxlen=3)}
285 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 9), (10, 9), (10, 9)], maxlen=3), 'u_6': deque([(9, 1), (9, 1), (9, 2)], maxlen=3), 'u_7': deque([(4, 8), (4, 8), (5, 8)], maxlen=3)}
285: Looks like a stuck worker u_5 - deque([(10, 9), (10, 9), (10, 9)], maxlen=3)

286 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 10), (3, 10)], maxlen=3)}
286 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 9), (10, 9), (10, 8)], maxlen=3), 'u_6': deque([(9, 1), (9, 2), (9, 2)], maxlen=3), 'u_7': deque([(4, 8), (5, 8), (5, 8)], maxlen=3)}
286: Looks like a stuck worker u_4 - deque([(3, 10), (3, 10), (3, 10)], maxlen=3)

287 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 10), (4, 10)], maxlen=3)}
287 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 9), (10, 8), (10, 8)], maxlen=3), 'u_6': deque([(9, 2), (9, 2), (9, 3)], maxlen=3), 'u_7': deque([(5, 8), (5, 8), (6, 8)], maxlen=3)}
288 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (4, 10), (4, 10)], maxlen=3)}
288 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 8), (10, 8), (10, 8)], maxlen=3), 'u_6': deque([(9, 2), (9, 3), (9, 3)], maxlen=3), 'u_7': deque([(5, 8), (6, 8), (6, 8)], maxlen=3)}
288: Looks like a stuck worker u_5 - deque([(10, 8), (10, 8), (10, 8)], maxlen=3)

289 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 10), (4, 10), (4, 10)], maxlen=3)}
289 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 8), (10, 8), (10, 7)], maxlen=3), 'u_6': deque([(9, 3), (9, 3), (9, 3)], maxlen=3), 'u_7': deque([(6, 8), (6, 8), (7, 8)], maxlen=3)}
289: Looks like a stuck worker u_6 - deque([(9, 3), (9, 3), (9, 3)], maxlen=3)

289: Looks like a stuck worker u_4 - deque([(4, 10), (4, 10), (4, 10)], maxlen=3)

290 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 10), (4, 10), (5, 10)], maxlen=3)}
290 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 8), (10, 7), (10, 7)], maxlen=3), 'u_6': deque([(9, 3), (9, 3), (8, 3)], maxlen=3), 'u_7': deque([(6, 8), (7, 8), (7, 8)], maxlen=3)}
291 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 10), (5, 10), (5, 10)], maxlen=3)}
291 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 7), (10, 7), (10, 7)], maxlen=3), 'u_6': deque([(9, 3), (8, 3), (8, 3)], maxlen=3), 'u_7': deque([(7, 8), (7, 8), (8, 8)], maxlen=3)}
291: Looks like a stuck worker u_5 - deque([(10, 7), (10, 7), (10, 7)], maxlen=3)

292 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 10), (5, 10), (5, 10)], maxlen=3)}
292 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 7), (10, 7), (10, 8)], maxlen=3), 'u_6': deque([(8, 3), (8, 3), (8, 3)], maxlen=3), 'u_7': deque([(7, 8), (8, 8), (8, 8)], maxlen=3)}
292: Looks like a stuck worker u_4 - deque([(5, 10), (5, 10), (5, 10)], maxlen=3)

292: Looks like a stuck worker u_6 - deque([(8, 3), (8, 3), (8, 3)], maxlen=3)

293 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 7), (10, 8), (10, 8)], maxlen=3), 'u_6': deque([(8, 3), (8, 3), (8, 4)], maxlen=3), 'u_7': deque([(8, 8), (8, 8), (8, 8)], maxlen=3)}
293 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 10), (5, 10), (5, 9)], maxlen=3)}
293: Looks like a stuck worker u_7 - deque([(8, 8), (8, 8), (8, 8)], maxlen=3)

294 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 10), (5, 9), (5, 9)], maxlen=3)}
294 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 8), (10, 8), (10, 8)], maxlen=3), 'u_6': deque([(8, 3), (8, 4), (8, 4)], maxlen=3), 'u_7': deque([(8, 8), (8, 8), (8, 9)], maxlen=3)}
294: Looks like a stuck worker u_5 - deque([(10, 8), (10, 8), (10, 8)], maxlen=3)

295 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 9), (5, 9), (5, 9)], maxlen=3)}
295 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 8), (10, 8), (10, 7)], maxlen=3), 'u_6': deque([(8, 4), (8, 4), (8, 4)], maxlen=3), 'u_7': deque([(8, 8), (8, 9), (8, 9)], maxlen=3)}
295: Looks like a stuck worker u_4 - deque([(5, 9), (5, 9), (5, 9)], maxlen=3)

295: Looks like a stuck worker u_6 - deque([(8, 4), (8, 4), (8, 4)], maxlen=3)

296 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 9), (5, 9), (5, 8)], maxlen=3)}
296 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 8), (10, 7), (10, 7)], maxlen=3), 'u_6': deque([(8, 4), (8, 4), (9, 4)], maxlen=3), 'u_7': deque([(8, 9), (8, 9), (8, 9)], maxlen=3)}
296: Looks like a stuck worker u_7 - deque([(8, 9), (8, 9), (8, 9)], maxlen=3)

297 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 9), (5, 8), (5, 8)], maxlen=3)}
297 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 7), (10, 7), (10, 7)], maxlen=3), 'u_6': deque([(8, 4), (9, 4), (9, 4)], maxlen=3), 'u_7': deque([(8, 9), (8, 9), (8, 10)], maxlen=3)}
297: Looks like a stuck worker u_5 - deque([(10, 7), (10, 7), (10, 7)], maxlen=3)

298 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 8), (5, 8), (5, 8)], maxlen=3)}
298 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 7), (10, 7), (11, 7)], maxlen=3), 'u_6': deque([(9, 4), (9, 4), (9, 4)], maxlen=3), 'u_7': deque([(8, 9), (8, 10), (8, 10)], maxlen=3)}
298: Looks like a stuck worker u_4 - deque([(5, 8), (5, 8), (5, 8)], maxlen=3)

298: Looks like a stuck worker u_6 - deque([(9, 4), (9, 4), (9, 4)], maxlen=3)

299 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 8), (5, 8), (5, 7)], maxlen=3)}
299 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 7), (11, 7), (11, 7)], maxlen=3), 'u_6': deque([(9, 4), (9, 4), (9, 3)], maxlen=3), 'u_7': deque([(8, 10), (8, 10), (8, 10)], maxlen=3)}
299: Looks like a stuck worker u_7 - deque([(8, 10), (8, 10), (8, 10)], maxlen=3)

300 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 8), (5, 7), (5, 7)], maxlen=3)}
300 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(11, 7), (11, 7), (11, 7)], maxlen=3), 'u_6': deque([(9, 4), (9, 3), (9, 3)], maxlen=3), 'u_7': deque([(8, 10), (8, 10), (7, 10)], maxlen=3)}
300: Looks like a stuck worker u_5 - deque([(11, 7), (11, 7), (11, 7)], maxlen=3)

301 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(11, 7), (11, 7), (11, 7)], maxlen=3), 'u_6': deque([(9, 3), (9, 3), (9, 3)], maxlen=3), 'u_7': deque([(8, 10), (7, 10), (7, 10)], maxlen=3)}
301 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 7), (5, 7), (5, 7)], maxlen=3)}
301: Looks like a stuck worker u_4 - deque([(5, 7), (5, 7), (5, 7)], maxlen=3)

301: Looks like a stuck worker u_5 - deque([(11, 7), (11, 7), (11, 7)], maxlen=3)

301: Looks like a stuck worker u_6 - deque([(9, 3), (9, 3), (9, 3)], maxlen=3)

302 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 7), (5, 7), (6, 7)], maxlen=3)}
302 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(11, 7), (11, 7), (11, 7)], maxlen=3), 'u_6': deque([(9, 3), (9, 3), (8, 3)], maxlen=3), 'u_7': deque([(7, 10), (7, 10), (7, 10)], maxlen=3)}
302: Looks like a stuck worker u_5 - deque([(11, 7), (11, 7), (11, 7)], maxlen=3)

302: Looks like a stuck worker u_7 - deque([(7, 10), (7, 10), (7, 10)], maxlen=3)

303 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 7), (6, 7), (6, 7)], maxlen=3)}
303 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(11, 7), (11, 7), (11, 7)], maxlen=3), 'u_6': deque([(9, 3), (8, 3), (8, 3)], maxlen=3), 'u_7': deque([(7, 10), (7, 10), (8, 10)], maxlen=3)}
303: Looks like a stuck worker u_5 - deque([(11, 7), (11, 7), (11, 7)], maxlen=3)

304 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(6, 7), (6, 7), (6, 7)], maxlen=3)}
304 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(11, 7), (11, 7), (11, 7)], maxlen=3), 'u_6': deque([(8, 3), (8, 3), (8, 3)], maxlen=3), 'u_7': deque([(7, 10), (8, 10), (8, 10)], maxlen=3)}
304: Looks like a stuck worker u_4 - deque([(6, 7), (6, 7), (6, 7)], maxlen=3)

304: Looks like a stuck worker u_5 - deque([(11, 7), (11, 7), (11, 7)], maxlen=3)

304: Looks like a stuck worker u_6 - deque([(8, 3), (8, 3), (8, 3)], maxlen=3)

305 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(6, 7), (6, 7), (5, 7)], maxlen=3)}
305 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(11, 7), (11, 7), (11, 7)], maxlen=3), 'u_6': deque([(8, 3), (8, 3), (7, 3)], maxlen=3), 'u_7': deque([(8, 10), (8, 10), (8, 10)], maxlen=3)}
305: Looks like a stuck worker u_5 - deque([(11, 7), (11, 7), (11, 7)], maxlen=3)

305: Looks like a stuck worker u_7 - deque([(8, 10), (8, 10), (8, 10)], maxlen=3)

306 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(6, 7), (5, 7), (5, 7)], maxlen=3)}
306 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(11, 7), (11, 7), (10, 7)], maxlen=3), 'u_6': deque([(8, 3), (7, 3), (7, 3)], maxlen=3), 'u_7': deque([(8, 10), (8, 10), (9, 10)], maxlen=3)}
307 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 7), (5, 7), (5, 7)], maxlen=3)}
307 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(11, 7), (10, 7), (10, 7)], maxlen=3), 'u_6': deque([(7, 3), (7, 3), (7, 3)], maxlen=3), 'u_7': deque([(8, 10), (9, 10), (9, 10)], maxlen=3)}
307: Looks like a stuck worker u_4 - deque([(5, 7), (5, 7), (5, 7)], maxlen=3)

307: Looks like a stuck worker u_6 - deque([(7, 3), (7, 3), (7, 3)], maxlen=3)

308 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 7), (5, 7), (5, 8)], maxlen=3)}
308 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 7), (10, 7), (10, 7)], maxlen=3), 'u_6': deque([(7, 3), (7, 3), (7, 2)], maxlen=3), 'u_7': deque([(9, 10), (9, 10), (9, 10)], maxlen=3)}
308: Looks like a stuck worker u_5 - deque([(10, 7), (10, 7), (10, 7)], maxlen=3)

308: Looks like a stuck worker u_7 - deque([(9, 10), (9, 10), (9, 10)], maxlen=3)

309 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 7), (5, 8), (5, 8)], maxlen=3)}
309 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 7), (10, 7), (11, 7)], maxlen=3), 'u_6': deque([(7, 3), (7, 2), (7, 2)], maxlen=3), 'u_7': deque([(9, 10), (9, 10), (10, 10)], maxlen=3)}
310 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 8), (5, 8), (5, 8)], maxlen=3)}
310 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 7), (11, 7), (11, 7)], maxlen=3), 'u_6': deque([(7, 2), (7, 2), (7, 2)], maxlen=3), 'u_7': deque([(9, 10), (10, 10), (10, 10)], maxlen=3)}
310: Looks like a stuck worker u_4 - deque([(5, 8), (5, 8), (5, 8)], maxlen=3)

310: Looks like a stuck worker u_6 - deque([(7, 2), (7, 2), (7, 2)], maxlen=3)

311 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(11, 7), (11, 7), (11, 7)], maxlen=3), 'u_6': deque([(7, 2), (7, 2), (7, 1)], maxlen=3), 'u_7': deque([(10, 10), (10, 10), (10, 10)], maxlen=3)}
311 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 8), (5, 8), (5, 9)], maxlen=3)}
311: Looks like a stuck worker u_5 - deque([(11, 7), (11, 7), (11, 7)], maxlen=3)

311: Looks like a stuck worker u_7 - deque([(10, 10), (10, 10), (10, 10)], maxlen=3)

312 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 8), (5, 9), (5, 9)], maxlen=3)}
312 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(11, 7), (11, 7), (11, 6)], maxlen=3), 'u_6': deque([(7, 2), (7, 1), (7, 1)], maxlen=3), 'u_7': deque([(10, 10), (10, 10), (10, 11)], maxlen=3)}
313 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 9), (5, 9), (5, 9)], maxlen=3)}
313 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(11, 7), (11, 6), (11, 6)], maxlen=3), 'u_6': deque([(7, 1), (7, 1), (7, 1)], maxlen=3), 'u_7': deque([(10, 10), (10, 11), (10, 11)], maxlen=3)}
314 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 9), (5, 9), (5, 9)], maxlen=3)}
314 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(11, 6), (11, 6), (11, 6)], maxlen=3), 'u_6': deque([(7, 1), (7, 1), (7, 1)], maxlen=3), 'u_7': deque([(10, 11), (10, 11), (10, 11)], maxlen=3)}
314: Looks like a stuck worker u_6 - deque([(7, 1), (7, 1), (7, 1)], maxlen=3)

314: Looks like a stuck worker u_4 - deque([(5, 9), (5, 9), (5, 9)], maxlen=3)

315 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 9), (5, 9), (4, 9)], maxlen=3)}
315 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(11, 6), (11, 6), (11, 6)], maxlen=3), 'u_6': deque([(7, 1), (7, 1), (7, 2)], maxlen=3), 'u_7': deque([(10, 11), (10, 11), (10, 11)], maxlen=3)}
315: Looks like a stuck worker u_5 - deque([(11, 6), (11, 6), (11, 6)], maxlen=3)

315: Looks like a stuck worker u_7 - deque([(10, 11), (10, 11), (10, 11)], maxlen=3)

316 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 9), (4, 9), (4, 9)], maxlen=3)}
316 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(11, 6), (11, 6), (11, 5)], maxlen=3), 'u_6': deque([(7, 1), (7, 2), (7, 2)], maxlen=3), 'u_7': deque([(10, 11), (10, 11), (10, 11)], maxlen=3)}
316: Looks like a stuck worker u_7 - deque([(10, 11), (10, 11), (10, 11)], maxlen=3)

317 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 9), (4, 9), (4, 9)], maxlen=3)}
317 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(11, 6), (11, 5), (11, 5)], maxlen=3), 'u_6': deque([(7, 2), (7, 2), (7, 2)], maxlen=3), 'u_7': deque([(10, 11), (10, 11), (11, 11)], maxlen=3)}
318 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 9), (4, 9), (4, 9)], maxlen=3)}
318 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(11, 5), (11, 5), (11, 5)], maxlen=3), 'u_6': deque([(7, 2), (7, 2), (7, 2)], maxlen=3), 'u_7': deque([(10, 11), (11, 11), (11, 11)], maxlen=3)}
318: Looks like a stuck worker u_4 - deque([(4, 9), (4, 9), (4, 9)], maxlen=3)

318: Looks like a stuck worker u_6 - deque([(7, 2), (7, 2), (7, 2)], maxlen=3)

319 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 9), (4, 9), (5, 9)], maxlen=3)}
319 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(11, 5), (11, 5), (11, 5)], maxlen=3), 'u_6': deque([(7, 2), (7, 2), (6, 2)], maxlen=3), 'u_7': deque([(11, 11), (11, 11), (11, 11)], maxlen=3)}
319: Looks like a stuck worker u_5 - deque([(11, 5), (11, 5), (11, 5)], maxlen=3)

320 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 9), (5, 9), (5, 9)], maxlen=3)}
320 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(11, 5), (11, 5), (11, 6)], maxlen=3), 'u_6': deque([(7, 2), (6, 2), (6, 2)], maxlen=3), 'u_7': deque([(11, 11), (11, 11), (11, 11)], maxlen=3)}
320: Looks like a stuck worker u_7 - deque([(11, 11), (11, 11), (11, 11)], maxlen=3)

321 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 9), (5, 9), (5, 9)], maxlen=3)}
321 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(11, 5), (11, 6), (11, 6)], maxlen=3), 'u_6': deque([(6, 2), (6, 2), (6, 2)], maxlen=3), 'u_7': deque([(11, 11), (11, 11), (11, 10)], maxlen=3)}
322 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 9), (5, 9), (5, 9)], maxlen=3)}
322 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(11, 6), (11, 6), (11, 6)], maxlen=3), 'u_6': deque([(6, 2), (6, 2), (6, 2)], maxlen=3), 'u_7': deque([(11, 11), (11, 10), (11, 10)], maxlen=3)}
322: Looks like a stuck worker u_4 - deque([(5, 9), (5, 9), (5, 9)], maxlen=3)

322: Looks like a stuck worker u_6 - deque([(6, 2), (6, 2), (6, 2)], maxlen=3)

323 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 9), (5, 9), (5, 8)], maxlen=3)}
323 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(11, 6), (11, 6), (11, 6)], maxlen=3), 'u_6': deque([(6, 2), (6, 2), (6, 1)], maxlen=3), 'u_7': deque([(11, 10), (11, 10), (11, 9)], maxlen=3)}
323: Looks like a stuck worker u_5 - deque([(11, 6), (11, 6), (11, 6)], maxlen=3)

324 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 9), (5, 8), (5, 8)], maxlen=3)}
324 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(11, 6), (11, 6), (10, 6)], maxlen=3), 'u_6': deque([(6, 2), (6, 1), (6, 1)], maxlen=3), 'u_7': deque([(11, 10), (11, 9), (11, 9)], maxlen=3)}
325 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 8), (5, 8), (5, 9)], maxlen=3)}
325 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(11, 6), (10, 6), (10, 6)], maxlen=3), 'u_6': deque([(6, 1), (6, 1), (7, 1)], maxlen=3), 'u_7': deque([(11, 9), (11, 9), (10, 9)], maxlen=3)}
326 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 8), (5, 9), (5, 9)], maxlen=3)}
326 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 6), (10, 6), (10, 6)], maxlen=3), 'u_6': deque([(6, 1), (7, 1), (7, 1)], maxlen=3), 'u_7': deque([(11, 9), (10, 9), (10, 9)], maxlen=3)}
326: Looks like a stuck worker u_5 - deque([(10, 6), (10, 6), (10, 6)], maxlen=3)

327 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 9), (5, 9), (4, 9)], maxlen=3)}
327 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 6), (10, 6), (9, 6)], maxlen=3), 'u_6': deque([(7, 1), (7, 1), (8, 1)], maxlen=3), 'u_7': deque([(10, 9), (10, 9), (10, 9)], maxlen=3)}
327: Looks like a stuck worker u_7 - deque([(10, 9), (10, 9), (10, 9)], maxlen=3)

328 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(5, 9), (4, 9), (4, 9)], maxlen=3)}
328 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 6), (9, 6), (9, 6)], maxlen=3), 'u_6': deque([(7, 1), (8, 1), (8, 1)], maxlen=3), 'u_7': deque([(10, 9), (10, 9), (11, 9)], maxlen=3)}
329 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 9), (4, 9), (4, 9)], maxlen=3)}
329 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 6), (9, 6), (9, 6)], maxlen=3), 'u_6': deque([(8, 1), (8, 1), (8, 2)], maxlen=3), 'u_7': deque([(10, 9), (11, 9), (11, 9)], maxlen=3)}
329: Looks like a stuck worker u_4 - deque([(4, 9), (4, 9), (4, 9)], maxlen=3)

329: Looks like a stuck worker u_5 - deque([(9, 6), (9, 6), (9, 6)], maxlen=3)

330 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 9), (4, 9), (3, 9)], maxlen=3)}
330 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 6), (9, 6), (10, 6)], maxlen=3), 'u_6': deque([(8, 1), (8, 2), (8, 2)], maxlen=3), 'u_7': deque([(11, 9), (11, 9), (11, 9)], maxlen=3)}
330: Looks like a stuck worker u_7 - deque([(11, 9), (11, 9), (11, 9)], maxlen=3)

331 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 9), (3, 9), (3, 9)], maxlen=3)}
331 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 6), (10, 6), (10, 6)], maxlen=3), 'u_6': deque([(8, 2), (8, 2), (8, 3)], maxlen=3), 'u_7': deque([(11, 9), (11, 9), (10, 9)], maxlen=3)}
332 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 9), (3, 9)], maxlen=3)}
332 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 6), (10, 6), (10, 6)], maxlen=3), 'u_6': deque([(8, 2), (8, 3), (8, 3)], maxlen=3), 'u_7': deque([(11, 9), (10, 9), (10, 9)], maxlen=3)}
332: Looks like a stuck worker u_4 - deque([(3, 9), (3, 9), (3, 9)], maxlen=3)

332: Looks like a stuck worker u_5 - deque([(10, 6), (10, 6), (10, 6)], maxlen=3)

333 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 9), (4, 9)], maxlen=3)}
333 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 6), (10, 6), (10, 7)], maxlen=3), 'u_6': deque([(8, 3), (8, 3), (8, 4)], maxlen=3), 'u_7': deque([(10, 9), (10, 9), (10, 9)], maxlen=3)}
333: Looks like a stuck worker u_7 - deque([(10, 9), (10, 9), (10, 9)], maxlen=3)

334 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (4, 9), (4, 9)], maxlen=3)}
334 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 6), (10, 7), (10, 7)], maxlen=3), 'u_6': deque([(8, 3), (8, 4), (8, 4)], maxlen=3), 'u_7': deque([(10, 9), (10, 9), (10, 10)], maxlen=3)}
335 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 9), (4, 9), (4, 9)], maxlen=3)}
335 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 7), (10, 7), (10, 7)], maxlen=3), 'u_6': deque([(8, 4), (8, 4), (8, 4)], maxlen=3), 'u_7': deque([(10, 9), (10, 10), (10, 10)], maxlen=3)}
335: Looks like a stuck worker u_4 - deque([(4, 9), (4, 9), (4, 9)], maxlen=3)

335: Looks like a stuck worker u_5 - deque([(10, 7), (10, 7), (10, 7)], maxlen=3)

335: Looks like a stuck worker u_6 - deque([(8, 4), (8, 4), (8, 4)], maxlen=3)

336 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 9), (4, 9), (4, 10)], maxlen=3)}
336 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 7), (10, 7), (11, 7)], maxlen=3), 'u_6': deque([(8, 4), (8, 4), (9, 4)], maxlen=3), 'u_7': deque([(10, 10), (10, 10), (10, 10)], maxlen=3)}
336: Looks like a stuck worker u_7 - deque([(10, 10), (10, 10), (10, 10)], maxlen=3)

337 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 9), (4, 10), (4, 10)], maxlen=3)}
337 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 7), (11, 7), (11, 7)], maxlen=3), 'u_6': deque([(8, 4), (9, 4), (9, 4)], maxlen=3), 'u_7': deque([(10, 10), (10, 10), (9, 10)], maxlen=3)}
338 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 10), (4, 10), (4, 10)], maxlen=3)}
338 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(11, 7), (11, 7), (11, 7)], maxlen=3), 'u_6': deque([(9, 4), (9, 4), (9, 4)], maxlen=3), 'u_7': deque([(10, 10), (9, 10), (9, 10)], maxlen=3)}
338: Looks like a stuck worker u_4 - deque([(4, 10), (4, 10), (4, 10)], maxlen=3)

338: Looks like a stuck worker u_5 - deque([(11, 7), (11, 7), (11, 7)], maxlen=3)

338: Looks like a stuck worker u_6 - deque([(9, 4), (9, 4), (9, 4)], maxlen=3)

339 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 10), (4, 10), (4, 11)], maxlen=3)}
339 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(11, 7), (11, 7), (10, 7)], maxlen=3), 'u_6': deque([(9, 4), (9, 4), (9, 3)], maxlen=3), 'u_7': deque([(9, 10), (9, 10), (9, 10)], maxlen=3)}
339: Looks like a stuck worker u_7 - deque([(9, 10), (9, 10), (9, 10)], maxlen=3)

340 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 10), (4, 11), (4, 11)], maxlen=3)}
340 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(11, 7), (10, 7), (10, 7)], maxlen=3), 'u_6': deque([(9, 4), (9, 3), (9, 3)], maxlen=3), 'u_7': deque([(9, 10), (9, 10), (10, 10)], maxlen=3)}
341 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 11), (4, 11), (4, 11)], maxlen=3)}
341 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 7), (10, 7), (10, 7)], maxlen=3), 'u_6': deque([(9, 3), (9, 3), (9, 3)], maxlen=3), 'u_7': deque([(9, 10), (10, 10), (10, 10)], maxlen=3)}
341: Looks like a stuck worker u_4 - deque([(4, 11), (4, 11), (4, 11)], maxlen=3)

341: Looks like a stuck worker u_5 - deque([(10, 7), (10, 7), (10, 7)], maxlen=3)

341: Looks like a stuck worker u_6 - deque([(9, 3), (9, 3), (9, 3)], maxlen=3)

342 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 11), (4, 11), (3, 11)], maxlen=3)}
342 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 7), (10, 7), (9, 7)], maxlen=3), 'u_6': deque([(9, 3), (9, 3), (10, 3)], maxlen=3), 'u_7': deque([(10, 10), (10, 10), (10, 10)], maxlen=3)}
342: Looks like a stuck worker u_7 - deque([(10, 10), (10, 10), (10, 10)], maxlen=3)

343 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(4, 11), (3, 11), (3, 11)], maxlen=3)}
343 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 7), (9, 7), (9, 7)], maxlen=3), 'u_6': deque([(9, 3), (10, 3), (10, 3)], maxlen=3), 'u_7': deque([(10, 10), (10, 10), (10, 9)], maxlen=3)}
344 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 11), (3, 11), (3, 11)], maxlen=3)}
344 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 7), (9, 7), (9, 7)], maxlen=3), 'u_6': deque([(10, 3), (10, 3), (10, 3)], maxlen=3), 'u_7': deque([(10, 10), (10, 9), (10, 9)], maxlen=3)}
344: Looks like a stuck worker u_4 - deque([(3, 11), (3, 11), (3, 11)], maxlen=3)

344: Looks like a stuck worker u_5 - deque([(9, 7), (9, 7), (9, 7)], maxlen=3)

344: Looks like a stuck worker u_6 - deque([(10, 3), (10, 3), (10, 3)], maxlen=3)

345 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 11), (3, 11), (3, 10)], maxlen=3)}
345 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 7), (9, 7), (9, 6)], maxlen=3), 'u_6': deque([(10, 3), (10, 3), (10, 2)], maxlen=3), 'u_7': deque([(10, 9), (10, 9), (10, 9)], maxlen=3)}
345: Looks like a stuck worker u_7 - deque([(10, 9), (10, 9), (10, 9)], maxlen=3)

346 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 11), (3, 10), (3, 10)], maxlen=3)}
346 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 7), (9, 6), (9, 6)], maxlen=3), 'u_6': deque([(10, 3), (10, 2), (10, 2)], maxlen=3), 'u_7': deque([(10, 9), (10, 9), (9, 9)], maxlen=3)}
347 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 10), (3, 10)], maxlen=3)}
347 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 6), (9, 6), (9, 6)], maxlen=3), 'u_6': deque([(10, 2), (10, 2), (10, 2)], maxlen=3), 'u_7': deque([(10, 9), (9, 9), (9, 9)], maxlen=3)}
347: Looks like a stuck worker u_5 - deque([(9, 6), (9, 6), (9, 6)], maxlen=3)

347: Looks like a stuck worker u_4 - deque([(3, 10), (3, 10), (3, 10)], maxlen=3)

347: Looks like a stuck worker u_6 - deque([(10, 2), (10, 2), (10, 2)], maxlen=3)

348 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 10), (3, 9)], maxlen=3)}
348 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 6), (9, 6), (9, 5)], maxlen=3), 'u_6': deque([(10, 2), (10, 2), (10, 3)], maxlen=3), 'u_7': deque([(9, 9), (9, 9), (9, 9)], maxlen=3)}
348: Looks like a stuck worker u_7 - deque([(9, 9), (9, 9), (9, 9)], maxlen=3)

349 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 10), (3, 9), (3, 9)], maxlen=3)}
349 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 6), (9, 5), (9, 5)], maxlen=3), 'u_6': deque([(10, 2), (10, 3), (10, 3)], maxlen=3), 'u_7': deque([(9, 9), (9, 9), (8, 9)], maxlen=3)}
350 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 5), (9, 5), (9, 5)], maxlen=3), 'u_6': deque([(10, 3), (10, 3), (10, 3)], maxlen=3), 'u_7': deque([(9, 9), (8, 9), (8, 9)], maxlen=3)}
350 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 9), (3, 9)], maxlen=3)}
350: Looks like a stuck worker u_5 - deque([(9, 5), (9, 5), (9, 5)], maxlen=3)

350: Looks like a stuck worker u_4 - deque([(3, 9), (3, 9), (3, 9)], maxlen=3)

350: Looks like a stuck worker u_6 - deque([(10, 3), (10, 3), (10, 3)], maxlen=3)

351 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 9), (3, 8)], maxlen=3)}
351 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 5), (9, 5), (10, 5)], maxlen=3), 'u_6': deque([(10, 3), (10, 3), (10, 2)], maxlen=3), 'u_7': deque([(8, 9), (8, 9), (8, 9)], maxlen=3)}
351: Looks like a stuck worker u_7 - deque([(8, 9), (8, 9), (8, 9)], maxlen=3)

352 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 9), (3, 8), (3, 8)], maxlen=3)}
352 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(9, 5), (10, 5), (10, 5)], maxlen=3), 'u_6': deque([(10, 3), (10, 2), (10, 2)], maxlen=3), 'u_7': deque([(8, 9), (8, 9), (7, 9)], maxlen=3)}
353 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 8), (3, 8), (3, 8)], maxlen=3)}
353 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 5), (10, 5), (10, 5)], maxlen=3), 'u_6': deque([(10, 2), (10, 2), (10, 2)], maxlen=3), 'u_7': deque([(8, 9), (7, 9), (7, 9)], maxlen=3)}
354 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 8), (3, 8), (3, 8)], maxlen=3)}
354 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 5), (10, 5), (10, 5)], maxlen=3), 'u_6': deque([(10, 2), (10, 2), (10, 2)], maxlen=3), 'u_7': deque([(7, 9), (7, 9), (7, 9)], maxlen=3)}
354: Looks like a stuck worker u_4 - deque([(3, 8), (3, 8), (3, 8)], maxlen=3)

354: Looks like a stuck worker u_5 - deque([(10, 5), (10, 5), (10, 5)], maxlen=3)

354: Looks like a stuck worker u_6 - deque([(10, 2), (10, 2), (10, 2)], maxlen=3)

355 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 8), (3, 8), (2, 8)], maxlen=3)}
355 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 5), (10, 5), (11, 5)], maxlen=3), 'u_6': deque([(10, 2), (10, 2), (9, 2)], maxlen=3), 'u_7': deque([(7, 9), (7, 9), (7, 9)], maxlen=3)}
355: Looks like a stuck worker u_7 - deque([(7, 9), (7, 9), (7, 9)], maxlen=3)

356 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(3, 8), (2, 8), (2, 8)], maxlen=3)}
356 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(10, 5), (11, 5), (11, 5)], maxlen=3), 'u_6': deque([(10, 2), (9, 2), (9, 2)], maxlen=3), 'u_7': deque([(7, 9), (7, 9), (7, 10)], maxlen=3)}
357 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 8), (2, 8), (2, 8)], maxlen=3)}
357 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(11, 5), (11, 5), (11, 5)], maxlen=3), 'u_6': deque([(9, 2), (9, 2), (9, 2)], maxlen=3), 'u_7': deque([(7, 9), (7, 10), (7, 10)], maxlen=3)}
358 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 8), (2, 8), (2, 8)], maxlen=3)}
358 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(11, 5), (11, 5), (11, 5)], maxlen=3), 'u_6': deque([(9, 2), (9, 2), (9, 2)], maxlen=3), 'u_7': deque([(7, 10), (7, 10), (7, 10)], maxlen=3)}
358: Looks like a stuck worker u_4 - deque([(2, 8), (2, 8), (2, 8)], maxlen=3)

358: Looks like a stuck worker u_5 - deque([(11, 5), (11, 5), (11, 5)], maxlen=3)

358: Looks like a stuck worker u_6 - deque([(9, 2), (9, 2), (9, 2)], maxlen=3)

359 Worker Positions {'u_1': deque([(4, 10), (4, 10), (4, 10)], maxlen=3), 'u_4': deque([(2, 8), (2, 8), (2, 7)], maxlen=3)}
359 Worker Positions {'u_2': deque([(6, 9), (6, 9), (6, 10)], maxlen=3), 'u_3': deque([(6, 10), (6, 10), (6, 10)], maxlen=3), 'u_5': deque([(11, 5), (11, 5), (11, 6)], maxlen=3), 'u_6': deque([(9, 2), (9, 2), (9, 3)], maxlen=3), 'u_7': deque([(7, 10), (7, 10), (7, 10)], maxlen=3)}
359: Looks like a stuck worker u_7 - deque([(7, 10), (7, 10), (7, 10)], maxlen=3)

